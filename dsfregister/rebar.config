%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% ==========================================================
%% == Core ==
%% Additional library directories to add to the code path
{lib_dirs, [".","./rel_linux/libs"]}.

%% ==========================================================
%% == Erlang Compiler ==
%% Erlang compiler options
{erl_opts,[{i, "../dsf_base/include"},
           {i, "../reg_server/include"},
           {i, "../rel/libs/yaws/include"},
           {i, "../rel/libs/thrift/include"}]}.

%% ==========================================================
%% == Cleanup ==
%% Which files to cleanup
%{clean_files, ["file", "file2"]}.

%% ==========================================================
%% == Subdirectories ==
%% Subdirectories
{sub_dirs, ["dsf_base","reg_server","reg_web","rel_linux"]}.

%% == ErlyDTL Compiler ==

%% Options for the ErlyDTL compiler
{erlydtl_opts, []}.

%% ==========================================================
%% == xref ==
{xref_warnings, false}.
%% xref checks to run
{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, exports_not_used,
               deprecated_function_calls, deprecated_functions]}.
%% generated module
{xref_queries,
 [{"(XC - UC) || (XU - X - B
      - (\"escript\":\"foldl\"/\"3\")
      - (\"eunit_test\":\"function_wrapper\"/\"2\")
      - (\"abnfc\":\"file\"/\"2\")
      - (\"erlydtl\":\"compile\"/\"3\")
      - (\"lfe_comp\":\"file\"/\"2\")
      - (\"neotoma\":\"file\"/\"2\")
      - (\"protobuffs_compile\":\"scan_file\"/\"2\")
      - (\"diameter_codegen\":\"from_dict\"/\"4\")
      - (\"diameter_dict_util\":\"format_error\"/\"1\")
      - (\"diameter_dict_util\":\"parse\"/\"2\"))",
         []}]}.


