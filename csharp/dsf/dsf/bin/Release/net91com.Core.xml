<?xml version="1.0"?>
<doc>
    <assembly>
        <name>net91com.Core</name>
    </assembly>
    <members>
        <member name="T:net91com.Core.Web.MemCacheTimeHelper">
            <summary>
            定义了MemCache时间
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.Zero">
            <summary>
            0分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.Short">
            <summary>
            3分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.Normal">
            <summary>
            10分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.Long">
            <summary>
            30分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.OneMinute">
            <summary>
            1分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.TenMinutes">
            <summary>
            10分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.HalfHour">
            <summary>
            30分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.OneHour">
            <summary>
            60分钟
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.HalfDay">
            <summary>
            半天
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.OneDay">
            <summary>
            1天
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.NotRemovable">
            <summary>
            10年，应该够了
            </summary>
        </member>
        <member name="F:net91com.Core.Web.MemCacheTimeHelper.Forever">
            <summary>
            very looooooooooooooooooooooooooooooooooooooooooooooog
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterOneminute">
            <summary>
            一分钟之后
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterThreeminute">
            <summary>
            3分钟之后
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterTenMinutes">
            <summary>
            10分钟之后
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterHalfHour">
            <summary>
            30分钟之后
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterOneHour">
            <summary>
            60分钟之后
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterHalfDay">
            <summary>
            半天后
            </summary>
        </member>
        <member name="P:net91com.Core.Web.MemCacheTimeHelper.AfterOneDay">
            <summary>
            1天后
            </summary>
        </member>
        <member name="T:net91com.Core.Util.CryptoHelper">
            <summary>
            加密帮助类 
            </summary>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.UrlParamUrlEncodeRun(System.String)">
            <summary>
            使用Get传输替换关键字符为全角
            </summary>
            <param name="UrlParam"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.UrlParamUrlDecodeRun(System.String)">
            <summary>
            使用Get传输替换关键字符为半角
            </summary>
            <param name="UrlParam"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.MD5_Encrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            标准MD5加密
            </summary>
            <param name="source">待加密字符串</param>
            <param name="addKey">附加字符串</param>
            <param name="encoding">编码方式</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.MD5_Encrypt(System.String,System.String)">
            <summary>
            标准MD5加密
            </summary>
            <param name="source">待加密字符串</param>
            <param name="encoding">编码方式</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.MD5_Encrypt(System.String)">
            <summary>
            标准MD5加密
            </summary>
            <param name="source">被加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.RegUser_MD5_Pwd(System.String)">
            <summary>
            返回使用MD5加密后字符串
            </summary>
            <param name="strpwd">待加密字符串</param>
            <returns>加密后字符串</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.DES_Encrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            Desc加密
            </summary>
            <param name="source">待加密字符</param>
            <param name="key">密钥</param>
            <param name="encoding">编码格式，为空时使用UTF-8</param>
            <returns>string</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.DES_Encrypt(System.String,System.String)">
            <summary>
            Desc加密 编码格式采用：Encoding.Default
            </summary>
            <param name="source">待加密字符</param>
            <param name="key">密钥</param>
            <returns>string</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.DES_Encrypt(System.String)">
            <summary>
            使用默认key 做 DES加密 编码格式采用：Encoding.Default
            </summary>
            <param name="source">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.DES_Decrypt(System.String)">
            <summary>
            使用默认key 做 DES解密 编码格式采用：Encoding.Default
            </summary>
            <param name="source">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.DES_Decrypt(System.String,System.String)">
            <summary>
            DES解密 编码格式采用：Encoding.Default
            </summary>
            <param name="source">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.DES_Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            DES解密
            </summary>
            <param name="source">密文</param>
            <param name="key">密钥</param>
            <param name="encoding">编码格式，为空时使用UTF-8</param>
            <returns>明文</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDES_Encrypt(System.String,System.Text.Encoding,System.String,System.String)">
            <summary>
            使用指定的key和iv，加密input数据
            </summary>
            <param name="input">待加密的字符串</param>
            <param name="encoding">编码格式，默认为UTF8</param>
            <param name="key">密钥，必须为24位长度</param>
            <param name="iv">向量，必须为8位长度</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDES_Encrypt(System.String,System.String,System.String)">
            <summary>
            使用指定的key和iv，加密input数据
            </summary>
            <param name="input">待加密的字符串</param>
            <param name="key">密钥，必须为24位长度</param>
            <param name="iv">向量，必须为8位长度</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDES_Decrypt(System.String,System.Text.Encoding,System.String,System.String)">
            <summary>
            使用指定的key和iv，解密input数据
            </summary>
            <param name="input">待解密的字符串</param>
            <param name="encoding">编码格式，默认为UTF8</param>
            <param name="key">密钥，必须为24位长度</param>
            <param name="iv">向量，必须为8位长度</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDES_Decrypt(System.String,System.String,System.String)">
            <summary>
            使用指定的key和iv，解密input数据
            </summary>
            <param name="input">待解密的字符串</param>
            <param name="key">密钥，必须为24位长度</param>
            <param name="iv">向量，必须为8位长度</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDesEncrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            3Des加密，密钥长度必需是24字节
            </summary>
            <param name="key">密钥字节数组</param>
            <param name="iv">向量字节数组</param>
            <param name="source">源字节数组</param>
            <returns>加密后的字节数组</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDesDecrypt(System.Byte[],System.Byte[],System.Byte[],System.Int32@)">
            <summary>
            3Des解密，密钥长度必需是24字节
            </summary>
            <param name="key">密钥字节数组</param>
            <param name="iv">向量字节数组</param>
            <param name="source">加密后的字节数组</param>
            <param name="dataLen">解密后的数据长度</param>
            <returns>解密后的字节数组</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.TripleDesDecrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            3Des解密，密钥长度必需是24字节
            </summary>
            <param name="key">密钥字节数组</param>
            <param name="iv">向量字节数组</param>
            <param name="source">加密后的字节数组</param>
            <returns>解密后的字节数组</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.SHA1_Encrypt(System.String)">
            <summary>
            SHA1加密，等效于 PHP 的 SHA1() 代码
            </summary>
            <param name="source">被加密的字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.HttpBase64Encode(System.String)">
            <summary>
            编码 通过HTTP传递的Base64编码
            </summary>
            <param name="source">编码前的</param>
            <returns>编码后的</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.HttpBase64Decode(System.String)">
            <summary>
            解码 通过HTTP传递的Base64解码
            </summary>
            <param name="source">解码前的</param>
            <returns>解码后的</returns>
        </member>
        <member name="M:net91com.Core.Util.CryptoHelper.GetMD5HashFromFile(System.String)">
            <summary>
            计算文件的MD5值并返回
            </summary>
            <param name="fileName"></param>
            <returns>返回小写md5</returns>
        </member>
        <member name="P:net91com.Core.Util.CryptoHelper.Key">
            <summary>
            DES加解密的默认密钥和向量
            </summary>
        </member>
        <member name="P:net91com.Core.Util.CryptoHelper.DES3_KEY">
            <summary>
            3DES加解密的默认密钥, 前8位作为向量
            </summary>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserCenterInterface">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.#ctor">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginByCookie(System.Int64,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginByCookieAsync(System.Int64,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginByCookieAsync(System.Int64,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_Common(System.String,System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_CommonAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_CommonAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_Common_ZhengFu(System.Boolean,System.String,System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_Common_ZhengFuAsync(System.Boolean,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_Common_ZhengFuAsync(System.Boolean,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginForShopAuto(System.String,System.String,System.String,System.String,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginForShopAutoAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginForShopAutoAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheckAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheckAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_ForMobileSpace(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_ForMobileSpaceAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_ForMobileSpaceAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_Department(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_DepartmentAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_DepartmentAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterNickNameCheck(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterNickNameCheckAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterNickNameCheckAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterIDCardCheck(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterIDCardCheckAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterIDCardCheckAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Common(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int64@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_CommonAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_CommonAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Department(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_DepartmentAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_DepartmentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileMessage(System.String,System.String,System.String,System.Int64@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileMessageAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileMessageAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileSpace(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int64@,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileSpaceAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileSpaceAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_AiWan(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_AiWanAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_AiWanAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_ShouShen(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_ShouShenAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_ShouShenAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserName(System.String,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserNameAsync(System.String,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserNameAsync(System.String,System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserId(System.Int64,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserIdAsync(System.Int64,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserIdAsync(System.Int64,System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserName(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameWithCheckSource(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameWithCheckSourceAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameWithCheckSourceAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserName(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameWithCheckSource(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameWithCheckSourceAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameWithCheckSourceAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserName_ZhengFu(System.Boolean,System.String,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserName_ZhengFuAsync(System.Boolean,System.String,System.String,System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserName_ZhengFuAsync(System.Boolean,System.String,System.String,System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.SendResetUserPasswordByTech(System.Int32,System.Int32,System.String,System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.SendResetUserPasswordByTechAsync(System.Int32,System.Int32,System.String,System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.SendResetUserPasswordByTechAsync(System.Int32,System.Int32,System.String,System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetResetUserPasswordByTechStatus(System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetResetUserPasswordByTechStatusAsync(System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetResetUserPasswordByTechStatusAsync(System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_AllGame(System.Int64,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_AllGameAsync(System.Int64,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_AllGameAsync(System.Int64,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_Common(System.Int32,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_CommonAsync(System.Int32,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_CommonAsync(System.Int32,System.Int64,System.String,System.Int32,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserInfo_HistoryPassword(System.Int32,System.Boolean,System.String,System.String,System.String,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserInfo_HistoryPasswordAsync(System.Int32,System.Boolean,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserInfo_HistoryPasswordAsync(System.Int32,System.Boolean,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserId(System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserIdAsync(System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserIdAsync(System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserId(System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserIdAsync(System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserIdAsync(System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo(System.Int32,System.String,System.String,System.Data.DataSet@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfoAsync(System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfoAsync(System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ReadOnly(System.Int32,System.String,System.String,System.Data.DataSet@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ReadOnlyAsync(System.Int32,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ReadOnlyAsync(System.Int32,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_Sync_ByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_Sync_ByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_Sync_ByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfosByMobile(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfosByMobileAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfosByMobileAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByCDKeyNumber(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserName_20091020(System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserName_20091020Async(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserName_20091020Async(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserName(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserNameAsync(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserNameAsync(System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserId(System.Int32,System.Boolean,System.Int64,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserIdAsync(System.Int32,System.Boolean,System.Int64,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserIdAsync(System.Int32,System.Boolean,System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeStatusCheckByUserName(System.Int32,System.Boolean,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeStatusCheckByUserNameAsync(System.Int32,System.Boolean,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeStatusCheckByUserNameAsync(System.Int32,System.Boolean,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserName(System.Int32,System.Boolean,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserNameAsync(System.Int32,System.Boolean,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserNameAsync(System.Int32,System.Boolean,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserId(System.Int32,System.Boolean,System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserIdAsync(System.Int32,System.Boolean,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserIdAsync(System.Int32,System.Boolean,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserIDCardStatusCheckByUserName(System.Int32,System.Boolean,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserIDCardStatusCheckByUserNameAsync(System.Int32,System.Boolean,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserIDCardStatusCheckByUserNameAsync(System.Int32,System.Boolean,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_Peony(System.String,System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_PeonyAsync(System.String,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_PeonyAsync(System.String,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_Peony(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_PeonyAsync(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_PeonyAsync(System.String,System.Int64,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_IDHELP_Status(System.Int64,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_IDHELP_StatusAsync(System.Int64,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_IDHELP_StatusAsync(System.Int64,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ShopMobile(System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ShopMobileAsync(System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ShopMobileAsync(System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_ShopMobile(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_ShopMobileAsync(System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_ShopMobileAsync(System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_Status(System.String,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_StatusAsync(System.String,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_StatusAsync(System.String,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.BindUser_TQKey(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.BindUser_TQKeyAsync(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.BindUser_TQKeyAsync(System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_UserKey(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_UserKeyAsync(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_UserKeyAsync(System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUser_TQKey_Increment(System.Int32,System.Boolean,System.String,System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUser_TQKey_IncrementAsync(System.Int32,System.Boolean,System.String,System.Int64,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUser_TQKey_IncrementAsync(System.Int32,System.Boolean,System.String,System.Int64,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserGameActivateWithActivateCardCheck(System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserGameActivateWithActivateCardCheckAsync(System.Int32,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserGameActivateWithActivateCardCheckAsync(System.Int32,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoTransfer(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoTransferAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoTransferAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_Notify(System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_NotifyAsync(System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_NotifyAsync(System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoModified_Record(System.String,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoModified_RecordAsync(System.String,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoModified_RecordAsync(System.String,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.SendShopSafeCardCheckCode(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.SendShopSafeCardCheckCodeAsync(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.SendShopSafeCardCheckCodeAsync(System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckShopSafeCardCheckCode(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckShopSafeCardCheckCodeAsync(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CheckShopSafeCardCheckCodeAsync(System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CallForUnlockForMY(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CallForUnlockForMYAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CallForUnlockForMYAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CallForBusiness(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CallForBusinessAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CallForBusinessAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetGameLockInfoForShop(System.String,System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetGameLockInfoForShopAsync(System.String,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GetGameLockInfoForShopAsync(System.String,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_ApplyForBind(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_ApplyForBindAsync(System.String,System.Int64,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_ApplyForBindAsync(System.String,System.Int64,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_CheckForApplyBind(System.String,System.Int64,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_CheckForApplyBindAsync(System.String,System.Int64,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_CheckForApplyBindAsync(System.String,System.Int64,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_UnBindByGM(System.String,System.Int64,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_UnBindByGMAsync(System.String,System.Int64,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_UnBindByGMAsync(System.String,System.Int64,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.NickNameChange_CommonByUserName(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.NickNameChange_CommonByUserNameAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.NickNameChange_CommonByUserNameAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.NDUserCenter.UserCenterInterface.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginByCookieCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLogin_Common_ZhengFuCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserLoginForShopAutoCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheckCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_ForMobileSpaceCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserNameCheck_DepartmentCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterNickNameCheckCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterIDCardCheckCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_DepartmentCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileMessageCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_MobileSpaceCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_AiWanCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.RegisterUserInfo_Cop_ShouShenCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_AiWanByUserNameWithCheckSourceCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_ShouShenByUserNameWithCheckSourceCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PasswordChange_CommonByUserName_ZhengFuCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.SendResetUserPasswordByTechCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetResetUserPasswordByTechStatusCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_AllGameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.User_GameOnlineKick_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUserInfo_HistoryPasswordCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfoCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ReadOnlyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_Sync_ByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfosByMobileCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ForOtherSys_ByUserName_20091020Completed">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeContentCheckByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeStatusCheckByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.PassSafeGetQuestionByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UserIDCardStatusCheckByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_PeonyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_PeonyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_IDHELP_StatusCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetUserInfo_ShopMobileCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_ShopMobileCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_StatusCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.BindUser_TQKeyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckUser_TQKey_UserKeyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUser_TQKey_IncrementCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UserGameActivateWithActivateCardCheckCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoTransferCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UpdateUserInfo_NotifyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.UserInfoModified_RecordCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.SendShopSafeCardCheckCodeCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CheckShopSafeCardCheckCodeCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CallForUnlockForMYCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.CallForBusinessCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GetGameLockInfoForShopCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_ApplyForBindCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_CheckForApplyBindCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.GameLock_UnBindByGMCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.NDUserCenter.UserCenterInterface.NickNameChange_CommonByUserNameCompleted">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserNameToken">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserNameToken.UserName">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserNameToken.Password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserNameToken.CheckCode">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserNameToken.AnyAttr">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLoginByCookieCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLoginByCookieCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLoginByCookieCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLoginByCookieCompletedEventArgs.return_userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLogin_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLogin_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLogin_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLogin_CommonCompletedEventArgs.return_userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLogin_Common_ZhengFuCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLogin_Common_ZhengFuCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLogin_Common_ZhengFuCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLogin_Common_ZhengFuCompletedEventArgs.return_userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLoginForShopAutoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserLoginForShopAutoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLoginForShopAutoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserLoginForShopAutoCompletedEventArgs.CookiesInfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserNameCheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserNameCheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserNameCheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserNameCheck_ForMobileSpaceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserNameCheck_ForMobileSpaceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserNameCheck_ForMobileSpaceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserNameCheck_DepartmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserNameCheck_DepartmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserNameCheck_DepartmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterNickNameCheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterNickNameCheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterNickNameCheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterIDCardCheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterIDCardCheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterIDCardCheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_CommonCompletedEventArgs.returnUin">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_DepartmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_DepartmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_DepartmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_MobileMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_MobileMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_MobileMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_MobileMessageCompletedEventArgs.returnUin">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_MobileSpaceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_MobileSpaceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_MobileSpaceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_MobileSpaceCompletedEventArgs.returnUin">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_MobileSpaceCompletedEventArgs.CookiesInfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_Cop_AiWanCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_Cop_AiWanCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_Cop_AiWanCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_Cop_ShouShenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.RegisterUserInfo_Cop_ShouShenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.RegisterUserInfo_Cop_ShouShenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_CommonByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_CommonByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_CommonByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_CommonByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_CommonByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_CommonByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_AiWanByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_AiWanByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_AiWanByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_AiWanByUserNameWithCheckSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_AiWanByUserNameWithCheckSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_AiWanByUserNameWithCheckSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_ShouShenByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_ShouShenByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_ShouShenByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_ShouShenByUserNameWithCheckSourceCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_ShouShenByUserNameWithCheckSourceCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_ShouShenByUserNameWithCheckSourceCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_CommonByUserName_ZhengFuCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PasswordChange_CommonByUserName_ZhengFuCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PasswordChange_CommonByUserName_ZhengFuCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.SendResetUserPasswordByTechCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.SendResetUserPasswordByTechCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.SendResetUserPasswordByTechCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetResetUserPasswordByTechStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetResetUserPasswordByTechStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetResetUserPasswordByTechStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.User_GameOnlineKick_AllGameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.User_GameOnlineKick_AllGameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.User_GameOnlineKick_AllGameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.User_GameOnlineKick_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.User_GameOnlineKick_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.User_GameOnlineKick_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserInfo_HistoryPasswordCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUserInfo_HistoryPasswordCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserInfo_HistoryPasswordCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUserInfo_HistoryPasswordCompletedEventArgs.right_times">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserNameCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserNameCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserIdCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByUserIdCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfoCompletedEventArgs.returnds">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ReadOnlyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ReadOnlyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ReadOnlyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ReadOnlyCompletedEventArgs.returnds">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_Sync_ByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_Sync_ByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_Sync_ByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_Sync_ByUserNameCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfosByMobileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfosByMobileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfosByMobileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfosByMobileCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserOtherInfo_ForOtherSys_ByCDKeyNumberCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserName_20091020CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserName_20091020CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserName_20091020CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ForOtherSys_ByUserName_20091020CompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeContentCheckByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeContentCheckByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeContentCheckByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeContentCheckByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeContentCheckByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeContentCheckByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeStatusCheckByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeStatusCheckByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeStatusCheckByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserNameCompletedEventArgs.return_userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.PassSafeGetQuestionByUserIdCompletedEventArgs.return_userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserIDCardStatusCheckByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserIDCardStatusCheckByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserIDCardStatusCheckByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_PeonyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_PeonyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_PeonyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_PeonyCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_PeonyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_PeonyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UpdateUserInfo_PeonyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_IDHELP_StatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_IDHELP_StatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UpdateUserInfo_IDHELP_StatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ShopMobileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetUserInfo_ShopMobileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ShopMobileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetUserInfo_ShopMobileCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_ShopMobileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_ShopMobileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UpdateUserInfo_ShopMobileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUser_TQKey_StatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUser_TQKey_StatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUser_TQKey_StatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.BindUser_TQKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.BindUser_TQKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.BindUser_TQKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUser_TQKey_UserKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckUser_TQKey_UserKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckUser_TQKey_UserKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUser_TQKey_IncrementCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUser_TQKey_IncrementCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UpdateUser_TQKey_IncrementCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserGameActivateWithActivateCardCheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserGameActivateWithActivateCardCheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserGameActivateWithActivateCardCheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserInfoTransferCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserInfoTransferCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserInfoTransferCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserInfoTransferCompletedEventArgs.returncontent">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_NotifyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UpdateUserInfo_NotifyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UpdateUserInfo_NotifyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserInfoModified_RecordCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.UserInfoModified_RecordCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.UserInfoModified_RecordCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.SendShopSafeCardCheckCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.SendShopSafeCardCheckCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.SendShopSafeCardCheckCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckShopSafeCardCheckCodeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CheckShopSafeCardCheckCodeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CheckShopSafeCardCheckCodeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CallForUnlockForMYCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CallForUnlockForMYCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CallForUnlockForMYCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CallForBusinessCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.CallForBusinessCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CallForBusinessCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.CallForBusinessCompletedEventArgs.verifycode">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetGameLockInfoForShopCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GetGameLockInfoForShopCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetGameLockInfoForShopCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GetGameLockInfoForShopCompletedEventArgs.returnuserinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GameLock_ApplyForBindCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GameLock_ApplyForBindCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GameLock_ApplyForBindCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GameLock_CheckForApplyBindCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GameLock_CheckForApplyBindCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GameLock_CheckForApplyBindCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GameLock_UnBindByGMCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.GameLock_UnBindByGMCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.GameLock_UnBindByGMCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.NickNameChange_CommonByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.NDUserCenter.NickNameChange_CommonByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.NDUserCenter.NickNameChange_CommonByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.Util.ObjectHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Util.ObjectHelper.DealWithObject(System.Object)">
            <summary>
            对object进行处理，引用类型为null或者为数据库的NULL时返回""
            </summary>
            <param name="obj"></param>
            <returns>string</returns>
        </member>
        <member name="M:net91com.Core.Util.ObjectHelper.DealWithObject(System.Object,System.String)">
            <summary>
            对object进行处理，引用类型为null或者为数据库的NULL时返回defaultValue
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.ObjectHelper.DealWithObject(System.Object,System.String,System.String)">
            <summary>
            对object进行处理，值为null或者为compareValue时返回outPutValue
            </summary>
            <param name="obj"></param>
            <param name="compareValue">进行比较的值</param>
            <param name="outPutValue">输出值</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.ZipHelper">
            <summary>
            压缩解压缩类
            </summary>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.ZipFiles(System.String,System.String[])">
            <summary>
            压缩指定的文件列表
            </summary>
            <param name="zipFilePath">要压缩到的文件路径名</param>
            <param name="files">要被压缩的文件列表</param>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.ZipDirs(System.String,System.String[])">
            <summary>
            压缩指定的目录列表
            </summary>
            <param name="zipFilePath">要压缩到的文件路径名</param>
            <param name="dirs">要被压缩的目录列表</param>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.AddFiles(System.String,System.String[])">
            <summary>
            往已存在的压缩文件里添加指定的文件列表，压缩文件不存在时，新建
            </summary>
            <param name="zipFilePath">要压缩到的文件路径名</param>
            <param name="files">要被压缩的文件列表</param>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.AddDirEntry(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.String)">
            <summary>
            把目录加入压缩包,返回压缩的目录和文件数
            </summary>
            <param name="zos"></param>
            <param name="dir"></param>
            <param name="rootDir">用于把文件名中不需要压缩的路径替换掉，避免压缩包里出现C:这样的目录结构</param>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.AddFileEntry(ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String,System.String)">
            <summary>
            把文件加入压缩包
            </summary>
            <param name="zos"></param>
            <param name="file"></param>
            <param name="rootDir">用于把文件名中不需要压缩的路径替换掉，避免压缩包里出现C:这样的目录结构</param>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.UnZipFile(System.String,System.String)">
            <summary>
            把指定压缩包解压到指定文件夹，并返回解压文件数，文件夹为空时，解压到压缩包所在目录
            </summary>
            <param name="zipfilename"></param>
            <param name="unzipDir"></param>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.GZipStr(System.String)">
            <summary>
            把字符串进行gzip压缩，并返回压缩后的字节流
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.ZipHelper.UnGZipStr(System.Byte[])">
            <summary>
            解压gzip字节流为字符串
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.CustomConfigsHelper">
            <summary>
            自定义配置类，刷新时不用重启应用程序池
            </summary>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.Init">
            <summary>
            初始化配置文件,文件放在web程序根目录下的db.config
            </summary>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.Init(System.String)">
            <summary>
            初始化指定的配置文件
            </summary>
            <param name="configPath"></param>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.IsChangedToBack(System.Exception)">
            <summary>
            统计SqlException发生次数，如果达到限制时，切换到备份数据库连接串
            </summary>
            <param name="exp"></param>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetConfig(System.String,System.String)">
            <summary>
            根据key获取AppSetting里的string配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue">未配置时，返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetEncConfig(System.String,System.String)">
            <summary>
            根据key获取AppSetting里的string配置值，并解密后返回
            </summary>
            <param name="key"></param>
            <param name="defaultValue">未配置时，要返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetBoolean(System.String,System.Boolean)">
            <summary>
            根据key获取AppSetting里的type="bool"的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue">未配置时，要返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetInt32(System.String,System.Int32)">
            <summary>
            根据key获取AppSetting里的type="int32"的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue">未配置时或非数值时，要返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetInt64(System.String,System.Int64)">
            <summary>
            根据key获取AppSetting里的type="int64"的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue">未配置时或非数值时，要返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            根据key获取AppSetting里的type="date"的配置值
            </summary>
            <param name="key"></param>
            <param name="defaultValue">未配置时或非日期时，要返回的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetConnectionProvider(System.String)">
            <summary>
            根据key获取数据库配置类
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetReaderConnectionString(System.String)">
            <summary>
            根据key获取数据库配置只读字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.GetWriterConnectionString(System.String)">
            <summary>
            根据key获取数据库配置可写字符串
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CustomConfigsHelper.IsValid(System.String[])">
            <summary>
            配合自定义配置进行IP判断的方法
            </summary>
            <param name="ipConfigName">允许的ip列表，以分号、空格、逗号或竖线分隔</param>
            <returns></returns>
        </member>
        <member name="P:net91com.Core.Util.CustomConfigsHelper.Connections">
            <summary>
            数据库连接配置
            </summary>
        </member>
        <member name="P:net91com.Core.Util.CustomConfigsHelper.Configs">
            <summary>
            字符串形式的自定义配置
            </summary>
        </member>
        <member name="P:net91com.Core.Util.CustomConfigsHelper.ConfigsBoolean">
            <summary>
            bool形式的自定义配置
            </summary>
        </member>
        <member name="P:net91com.Core.Util.CustomConfigsHelper.ConfigsInt32">
            <summary>
            Int32形式的自定义配置
            </summary>
        </member>
        <member name="P:net91com.Core.Util.CustomConfigsHelper.ConfigsInt64">
            <summary>
            Int64形式的自定义配置
            </summary>
        </member>
        <member name="P:net91com.Core.Util.CustomConfigsHelper.ConfigsDateTime">
            <summary>
            DateTime形式的自定义配置
            </summary>
        </member>
        <member name="T:net91com.Core.Mobile.UserAutoLogin">
            <summary>
            手机用户自动登录类
            </summary>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.#ctor(System.String)">
            <summary>
            初始化手机用户自动登录类
            <remarks>
            手机标识号将从URL或Cookies中获取
            同时需要在Web.Config中配置一个手机用户数据库连接串,配置节的Key为：MOBILE_COMMUNITY_DB_CONN_STRING
            </remarks>
            </summary>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.#ctor(System.String,System.String)">
            <summary>
            初始化手机用户自动登录类
            </summary>
            <param name="imei">手机标识号</param>
            <param name="sign">校验码</param>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.#ctor(System.String,System.String,System.String)">
            <summary>
            初始化手机用户自动登录类
            </summary>
            <param name="imei">手机标识号</param>
            <param name="sign">校验码</param>
            <param name="dbConn">手机用户数据库连接串</param>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.Login">
            <summary>
            自动登录
            </summary>
            <exception cref="T:net91com.Core.Mobile.AutoLoginException">自动登录失败异常</exception>
            <returns>返回值如果为null，代表登录失败</returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.Login(System.Int64)">
            <summary>
            自动登录
            </summary>
            <param name="centeruid">如果用户已经通过统一登录接口登录，则传入该用户Id</param>
            <exception cref="T:net91com.Core.Mobile.AutoLoginException">自动登录失败异常</exception>
            <returns>返回值如果为null，代表登录失败</returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.LoginByIMEI">
            <summary>
            自动登录(根据IMEI登陆，没有绑定关系的不自动将IMEI当着用户名写入 By cxb)
            </summary>
            <exception cref="T:net91com.Core.Mobile.AutoLoginException">自动登录失败异常</exception>
            <returns>返回值如果为null，代表登录失败</returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.AddUser(net91com.Core.Mobile.MobileUserInfo)">
            <summary>
            添加用户
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.CheckByAccountAndIMEI(System.String,System.String,System.Int64,System.String)">
            <summary>
            检查用户是否已经在社区注册(UserHelper.cs代码移值)
            </summary>
            <param name="account"></param>
            <param name="imei"></param>
            <param name="centeruid"></param>
            <param name="nickname"></param>
            <returns>用户ID(如果用户ID不为null，则用户已经注册)</returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.GetAccountByIMEI(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            根据IMEI号获取用户帐号信息(UserHelper.cs代码移值)
            </summary>
            <param name="conn"></param>
            <param name="imei"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.GetIMEI">
            <summary>
            从Url或Cookies中获取IMEI号(UserHelper.cs代码移值)
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.CheckByAccountAndIMEI(System.Data.SqlClient.SqlConnection,System.String,System.String,System.Int64)">
            <summary>
            检查用户是否已经在社区注册(UserHelper.cs代码移值)
            </summary>
            <param name="conn"></param>
            <param name="account"></param>
            <param name="imei"></param>
            <param name="centeruid"></param>
            <returns>用户ID(如果用户ID不为null，则用户已经注册)</returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.CheckByAccountAndIMEI(System.Data.SqlClient.SqlConnection,System.String,System.String,System.Int64,System.String)">
            <summary>
            检查用户是否已经在社区注册(UserHelper.cs代码移值)
            </summary>
            <param name="conn"></param>
            <param name="account"></param>
            <param name="imei"></param>
            <param name="centeruid"></param>
            <param name="nickname"></param>
            <returns>用户ID(如果用户ID不为null，则用户已经注册)</returns>
        </member>
        <member name="M:net91com.Core.Mobile.UserAutoLogin.CreateUserInfo(net91com.Core.Mobile.MobileUserInfo)">
            <summary>
            添加新用户信息(UserHelper.cs代码移值)
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="P:net91com.Core.Mobile.UserAutoLogin.IMEI">
            <summary>
            获取手机的唯一标识号
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.UserAutoLogin.Sign">
            <summary>
            获取自动登录的校验码
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.UserAutoLogin.MobileUserDatabase">
            <summary>
            获取或设置手机用户数据库连接串.(sqlserver)
            </summary>
        </member>
        <member name="T:net91com.Core.DebugHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.DebugHelper.GetValue(System.Object,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据属性或字段名称，返回属性或字段的值
            </summary>
            <param name="obj">IsStatic为false时表示对象,IsStatic为true时表示对象或Type类型</param>
            <param name="propertyName">属性名</param>
            <param name="IgnoreCase">属性名是否区分大小写）</param>
            <param name="IsPublic">是否公共属性</param>
            <param name="IsField">是字段还是属性</param>
            <param name="IsStatic">是否静态属性</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.GetStaticValue(System.Type,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据属性或字段名称，返回静态属性或字段的值
            </summary>
            <param name="type">类型</param>
            <param name="propertyName">属性名</param>
            <param name="IgnoreCase">属性名是否区分大小写）</param>
            <param name="IsPublic">是否公共属性</param>
            <param name="IsField">是字段还是属性</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.SetValue(System.Object,System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据属性或字段名称，设置属性或字段的值，并返回设置是否成功
            </summary>
            <param name="obj">IsStatic为false时表示对象,IsStatic为true时表示对象或Type类型</param>
            <param name="propertyName">属性名</param>
            <param name="propertyValue">属性值</param>
            <param name="IgnoreCase">属性名是否区分大小写）</param>
            <param name="IsPublic">是否公共属性</param>
            <param name="IsField">是字段还是属性</param>
            <param name="IsStatic">是否静态属性</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.SetStaticValue(System.Type,System.String,System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            根据属性或字段名称，返回静态属性或字段的值
            </summary>
            <param name="type">类型</param>
            <param name="propertyName">属性名</param>
            <param name="propertyValue">属性值</param>
            <param name="IgnoreCase">属性名是否区分大小写）</param>
            <param name="IsPublic">是否公共属性</param>
            <param name="IsField">是字段还是属性</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.ExecuteMethod(System.Object,System.String,System.Boolean,System.Object@)">
            <summary>
            执行对象的公共方法
            </summary>
            <param name="obj"></param>
            <param name="methodName"></param>
            <param name="IgnoreCase"></param>
            <param name="arg">用ref，因为对象的方法可能也加了ref或out</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.ExecuteMethod(System.Object,System.String,System.Boolean,System.Object[]@)">
            <summary>
            执行对象的公共方法
            </summary>
            <param name="obj"></param>
            <param name="methodName"></param>
            <param name="IgnoreCase"></param>
            <param name="args">用ref，因为对象的方法可能也加了ref或out</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.ExecuteMethod(System.Object,System.String,System.Boolean,System.Boolean,System.Object@)">
            <summary>
            执行对象的公共或非公共方法
            </summary>
            <param name="obj"></param>
            <param name="methodName"></param>
            <param name="IgnoreCase"></param>
            <param name="IsPublic">是否公共方法</param>
            <param name="arg">用ref，因为对象的方法可能也加了ref或out</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.DebugHelper.ExecuteMethod(System.Object,System.String,System.Boolean,System.Boolean,System.Object[]@)">
            <summary>
            执行对象的公共或非公共方法
            </summary>
            <param name="obj"></param>
            <param name="methodName"></param>
            <param name="IgnoreCase"></param>
            <param name="IsPublic">是否公共方法</param>
            <param name="args">用ref，因为对象的方法可能也加了ref或out</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.CacheHelper">
            <summary>
            CacheHelper Web缓存帮助类 添加,移除,读取缓存
            </summary>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Get``1(System.String)">
            <summary>
            通过缓存键获取相应的内容
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.TryGetValue``1(System.String,``0@)">
            <summary>
            试着取得缓存内容，如果有返回真，并返回取得后的值。没有则返回默认值。
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="outValue">返回相应类型的值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Contains(System.String)">
            <summary>
            判断是否有此key的值.
            注：如果要获取缓存数据，请使用TryGetValue方法
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,System.Int64)">
            <summary>
            新增，添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="lNumofMilliSeconds"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,System.TimeSpan)">
            <summary>
            新增，添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="tspan"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Insert``1(System.String,``0,System.Int64)">
            <summary>
            添加缓存，缓存存在时，覆盖
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="lNumofMilliSeconds"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Insert``1(System.String,``0,System.TimeSpan)">
            <summary>
            添加缓存，缓存存在时，覆盖
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <param name="value"></param>
            <param name="tspan"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Clear">
            <summary>
            清除所有缓存
            </summary>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Remove(System.String)">
            <summary>
            移除相关关键字的缓存，缓存存在时返回true，不存在时返回false
            </summary>
            <param name="keyword">缓存关键字</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.GetAbsoluteExpirationTime(net91com.Core.CacheTimeOption,net91com.Core.CacheExpirationOption)">
            <summary>
            获取绝对日期时间
            </summary>
            <param name="CacheTimeOption">缓存的时间长短</param>
            <param name="CacheExpirationOption"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.GetSlidingExpirationTime(net91com.Core.CacheTimeOption,net91com.Core.CacheExpirationOption)">
            <summary>
            获取弹性时间过期时间
            </summary>
            <param name="CacheTimeOption">缓存的时间长短</param>
            <param name="CacheExpirationOption"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,net91com.Core.CacheTimeOption,net91com.Core.CacheExpirationOption,System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="CacheTimeOption">缓存的时间长短</param>
            <param name="CacheExpirationOption"></param>
            <param name="dependencies">缓存依赖项</param>
            <param name="cacheItemPriority">优先级</param>
            <param name="callback">回调函数</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,net91com.Core.CacheTimeOption,net91com.Core.CacheExpirationOption,System.Web.Caching.CacheDependency,System.Web.Caching.CacheItemPriority)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="CacheTimeOption">缓存的时间长短</param>
            <param name="CacheExpirationOption"></param>
            <param name="dependencies">缓存依赖项</param>
            <param name="cacheItemPriority">优先级</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,net91com.Core.CacheTimeOption,net91com.Core.CacheExpirationOption,System.Web.Caching.CacheDependency)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="CacheTimeOption">缓存时间</param>
            <param name="CacheExpirationOption">缓存过期时间类别（绝对/弹性）</param>
            <param name="dependencies">缓存依赖项</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,net91com.Core.CacheTimeOption,net91com.Core.CacheExpirationOption)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="CacheTimeOption">缓存时间</param>
            <param name="CacheExpirationOption">缓存过期时间类别（绝对/弹性）</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,net91com.Core.CacheTimeOption,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="callback">回调函数</param>
            <param name="CacheTimeOption">缓存时间</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0,net91com.Core.CacheTimeOption)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
            <param name="CacheTimeOption">缓存时间</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Set``1(System.String,``0)">
            <summary>
            添加缓存(如果缓存键已经存在，则此方法调用无效)
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="key">缓存键</param>
            <param name="value">值</param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Get``1(System.String,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataHandler,System.Web.Caching.CacheItemRemovedCallback)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <param name="removedCallback">缓存失效时的回调函数</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Get``1(System.String,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataHandler)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Get``1(System.String,System.String,System.Int32@,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataWithRefParamHandler)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="recordCountKey">记录总数的缓存key</param>
            <param name="recordCount">记录总数(ref)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Get``1(System.String,System.String,System.String,System.Int32@,System.Int32@,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataWithRefParamHandler2)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="recordCountKey">记录总数的缓存key</param>
            <param name="recordCountKey2">记录总数的缓存key2</param>
            <param name="recordCount">记录总数(ref)</param>
            <param name="recordCount2">记录总数2(ref)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.Get``1(System.String,System.String,System.Int32@,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataWithOutParamHandler)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="recordCountKey">记录总数的缓存key</param>
            <param name="recordCount">记录总数(out)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.GetWithLock``1(System.String,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataHandler)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存(线程安全，但会造成一定性能开销)
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.GetWithLock``1(System.String,System.String,System.Int32@,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataWithRefParamHandler)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存(线程安全，但会造成一定性能开销)
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="recordCountKey">记录总数的缓存key</param>
            <param name="recordCount">记录总数(ref)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelper.GetWithLock``1(System.String,System.String,System.Int32@,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataWithOutParamHandler)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存(线程安全，但会造成一定性能开销)
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="key">缓存key</param>
            <param name="recordCountKey">记录总数的缓存key</param>
            <param name="recordCount">记录总数(out)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.CacheHelper.RefreshCacheDataHandler">
            <summary>
            缓存数据源更新委托
            </summary>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.CacheHelper.RefreshCacheDataWithRefParamHandler">
            <summary>
            带ref int的缓存数据源更新委托，一般用于分页方法
            </summary>
            <param name="recordCount"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.CacheHelper.RefreshCacheDataWithRefParamHandler2">
            <summary>
            带ref int的缓存数据源更新委托，一般用于分页方法
            </summary>
            <param name="recordCount"></param>
            <param name="recordCount2"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.CacheHelper.RefreshCacheDataWithOutParamHandler">
            <summary>
            带out int的缓存数据源更新委托，一般用于分页方法
            </summary>
            <param name="recordCount"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Extensions.DateTimeExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.DateTimeExtensions.GetMondayDate(System.DateTime)">
            <summary>
            计算某日起始日期（礼拜一的日期）
            </summary>
            <param name="source">该周中任意一天</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.DateTimeExtensions.GetSundayDate(System.DateTime)">
            <summary>
            计算某日起始日期（礼拜日的日期）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.CacheHelperByStatic">
            <summary>
            自定义缓存帮助类 添加,移除,读取缓存。
            注：使用静态变量保存缓存，永久驻留内存，需要手动调用Remove方法移除
            </summary>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Set``1(System.String,``0)">
            <summary>
            把指定对象存入缓存，无须指定过期时间，请在Get时去判断是否过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheObj"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Set``1(System.String,``0,System.Int32)">
            <summary>
            把指定对象存入缓存，无须指定过期时间，请在Get时去判断是否过期
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheObj"></param>
            <param name="recordCnt"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Get``1(System.String)">
            <summary>
            从缓存里获取对象返回，不存在时，返回类型默认值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Get``1(System.String,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataHandler,System.Boolean)">
            <summary>
            从缓存里获取对象，并返回，不存在时，通过callback填充缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cacheKey"></param>
            <param name="cacheTime"></param>
            <param name="callback"></param>
            <param name="ignoreErr">为true时，即使回调函数异常，也更新缓存填充时间，
            可以避免反复调用callback导致频繁错误</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Get``1(System.String,System.TimeSpan,net91com.Core.Web.CacheHelper.RefreshCacheDataHandler,System.Boolean)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存,
            如果缓存存在但是过期，则返回过期数据，并自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="cacheKey">缓存key</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <param name="ignoreErr">为true时，即使回调函数异常，也更新缓存填充时间，
            可以避免反复调用callback导致频繁错误</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Get``1(System.String,System.Int32@,net91com.Core.CacheTimeOption,net91com.Core.Web.CacheHelper.RefreshCacheDataWithOutParamHandler,System.Boolean)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存,
            如果缓存存在但是过期，则返回过期数据，并自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="cacheKey">缓存key</param>
            <param name="recordCount">记录总数(ref)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <param name="ignoreErr">为true时，即使回调函数异常，也更新缓存填充时间，
            可以避免反复调用callback导致频繁错误</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Get``1(System.String,System.Int32@,System.TimeSpan,net91com.Core.Web.CacheHelper.RefreshCacheDataWithOutParamHandler,System.Boolean)">
            <summary>
            获取指定key缓存数据，如果该缓存不存在，则自动调用数据源委托生成缓存,
            如果缓存存在但是过期，则返回过期数据，并自动调用数据源委托生成缓存
            </summary>
            <typeparam name="T">缓存数据的类型</typeparam>
            <param name="cacheKey">缓存key</param>
            <param name="recordCount">记录总数(ref)</param>
            <param name="cacheTime">缓存时间</param>
            <param name="callback">数据源委托</param>
            <param name="ignoreErr">为true时，即使回调函数异常，也更新缓存填充时间，
            可以避免反复调用callback导致频繁错误</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.Remove(System.String)">
            <summary>
            根据key，从缓存中移除对象，并返回移除是否成功
            </summary>
            <param name="cacheKey"></param>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.RemoveAll">
            <summary>
            清除所有缓存
            </summary>
        </member>
        <member name="P:net91com.Core.Web.CacheHelperByStatic.ClearEnable">
            <summary>
            是否允许内部线程清理过期对象，默认true
            </summary>
        </member>
        <member name="P:net91com.Core.Web.CacheHelperByStatic.ClearCircle">
            <summary>
            内部线程清理一次过期对象的周期，默认10分钟
            </summary>
        </member>
        <member name="P:net91com.Core.Web.CacheHelperByStatic.ClearExpiredTime">
            <summary>
            内部线程清理的过期对象的过期时长，默认120分钟
            </summary>
        </member>
        <member name="P:net91com.Core.Web.CacheHelperByStatic.CacheNum">
            <summary>
            返回当前的缓存个数
            </summary>
        </member>
        <member name="F:net91com.Core.Web.CacheHelperByStatic.CacheItem.FillTime">
            <summary>
            填充时间
            </summary>
        </member>
        <member name="F:net91com.Core.Web.CacheHelperByStatic.CacheItem.obj">
            <summary>
            填充对象
            </summary>
        </member>
        <member name="F:net91com.Core.Web.CacheHelperByStatic.CacheItem.recordCnt">
            <summary>
            分页时的记录总数
            </summary>
        </member>
        <member name="F:net91com.Core.Web.CacheHelperByStatic.CacheKey.FillTime">
            <summary>
            填充时间
            </summary>
        </member>
        <member name="F:net91com.Core.Web.CacheHelperByStatic.CacheKey.Key">
            <summary>
            填充的Key，只能填充一次
            </summary>
        </member>
        <member name="M:net91com.Core.Web.CacheHelperByStatic.CacheKey.Equals(System.Object)">
            <summary>
            重写相等比较方法
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.RSAHelper">
            <summary>
            RSAHelper 的摘要说明。 AllowCache属性指明了是否需要使用Cache 
            </summary>
        </member>
        <member name="F:net91com.Core.Util.RSAHelper.AllowCache">
            <summary>
            该RSAHelper是否允许使用Cache
            </summary>
        </member>
        <member name="F:net91com.Core.Util.RSAHelper.Default">
            <summary>
            这是使用默认的Key做的RSA加解密 有缓存
            </summary>
        </member>
        <member name="M:net91com.Core.Util.RSAHelper.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="allowCache">是否需要缓存</param>
        </member>
        <member name="M:net91com.Core.Util.RSAHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:net91com.Core.Util.RSAHelper.EncryptString(System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="inputString">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:net91com.Core.Util.RSAHelper.DecryptString(System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="inputString">密文</param>
            <returns>明文</returns>
        </member>
        <member name="T:net91com.Core.Util.UserInfoSection">
            <summary>
            91帐户需要配置（by cxb）
            </summary>
        </member>
        <member name="M:net91com.Core.Util.UserInfoSection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.AccountFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.DefaultPassword">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.RegisterKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.CheckKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.LoginKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:net91com.Core.Util.UserInfoSection.KeyForGettingUserIDByName">
            <summary>
            
            </summary>
        </member>
        <member name="T:net91com.Core.Util.TextHelper">
            <summary>
            有关文本及编码方面的实用方法
            </summary>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.GetChineseInitials(System.String)">
            <summary>
            获取（中文）字符串的每个字符的首字母。
            </summary>
            <param name="chineseString"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.Encode7Bit(System.String)">
            <summary>
            将ASCII字符串转为七位编码字节数组。
            </summary>
            <param name="sourceString"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.Decode7Bit(System.Byte[])">
            <summary>
            将七位编码的字节数组转为ASCII字符串。
            </summary>
            <param name="sourceBytes"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.ToHexString(System.Byte[])">
            <summary>
            将字节数组转换为十六进制字符串。
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.FromHexString(System.String)">
            <summary>
            将十六进制字符串转换为字节数组。
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.ToTraditionalChinese(System.String)">
            <summary>
            将简体转为繁体。
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.TextHelper.ToSimplifiedChinese(System.String)">
            <summary>
            将繁体转换为简体。
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Mobile.AutoLoginException">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Mobile.AutoLoginException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:net91com.Core.Mobile.AutoLoginException.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="imei"></param>
        </member>
        <member name="M:net91com.Core.Mobile.AutoLoginException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="imei"></param>
            <param name="innerException"></param>
        </member>
        <member name="P:net91com.Core.Mobile.AutoLoginException.IMEI">
            <summary>
            获取手机唯一标识号
            </summary>
        </member>
        <member name="T:net91com.Core.Attributes.SystemPlatformAttribute">
            <summary>
            是否属于系统平台(后台上传时可选的平台)
            </summary>
        </member>
        <member name="T:net91com.Core.Extensions.EnumExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.EnumExtensions.ToInt32(System.Enum)">
            <summary>
            将枚举转换为数字
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.EnumExtensions.GetDescription(System.Enum)">
            <summary>
            获取枚举值的描述信息
            </summary>
            <param name="source">枚举值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.EnumExtensions.GetDescription(System.Enum,System.Type)">
            <summary>
            获取枚举值的描述信息
            </summary>
            <param name="enumType">Type,该参数的格式为typeof(需要读的枚举类型)</param>
            <param name="source">枚举值</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.PassportHelper">
            <summary>
            91站点帐号登录注册接口访问辅助类
            <remarks>
            该类依赖于"统一登录" WebService，使用该类必须在Web.config中配置以下节点
            <![CDATA[
            <add key="Passport_API_UserName" value="Api用户名"/>
            <add key="Passport_API_Password" value="Api密码"/>
            <add key="Passport_API_CheckLogin_KeyValue" value="登录方法的Key值"/>
            <add key="Site_Flag" value="站点标识"/>
            ]]>
            </remarks>
            </summary>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.RegisterAccount(System.String,System.String,System.String,System.Int32@)">
            <summary>
            注册帐号
            </summary>
            <param name="account"></param>
            <param name="password"></param>
            <param name="idCard"></param>
            <param name="returnCode"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.GetCheckCode(System.String)">
            <summary>
            获取验证码
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.GetUserIDByName(System.String)">
            <summary>
            根据用户名取用户ID
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.ExistAccount(System.String)">
            <summary>
            检测账号是否存在
            </summary>
            <param name="account">账号名称</param>
            <returns>存在返回true，否则返回false</returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.CheckLoginFromQueryString">
            <summary>
            根据统一接口登录后的转向Url参数进行身份验证
            </summary>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.CheckLoginFromCookies">
            <summary>
            根据统一接口登录后的Cookies进行身份验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.CheckLogin(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            验证帐号是否登录成功
            </summary>
            <param name="siteFlag">站点标识</param>
            <param name="ordernumber_master">主登录标识</param>
            <param name="ordernumber_slave">从登录标识</param>
            <param name="timestamp">时间</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.SaveLogin2Cookies(System.String,System.Int64,System.String)">
            <summary>
             保存登陆凭证到cookies（时间20分钟）
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <param name="UID">用户ID</param>
            <param name="username">用户名</param>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.SaveLogin2Cookies(System.String,System.Int64,System.String,System.String)">
            <summary>
             保存登陆凭证到cookies（时间20分钟）
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <param name="UID">用户ID</param>
            <param name="username">用户名</param>
            <param name="nickname"></param>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.SimpleCheckLogin(System.String)">
            <summary>
            简单判断当前是否登录（用于各平台在Session中获取登陆信息之前使用）
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.CheckLoginFromCookies(System.String,System.Int64@,System.String@)">
            <summary>
            判断当前的登录凭证是否有效(验证签名和有效时间)
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <param name="UID">用户91通行证ID</param>
            <param name="username">用户91通行证登陆名</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.UpdateLogin2Cookies(System.String)">
            <summary>
            更新登陆凭证的cookies信息（时间20分钟）
            </summary>
            <param name="iemi">手机唯一标识码</param>
        </member>
        <member name="M:net91com.Core.Util.PassportHelper.LoginOut(System.String)">
            <summary>
            退出登录
            </summary>
            <param name="imei"></param>
        </member>
        <member name="T:net91com.Core.Extensions.RepeaterItemExtensions">
            <summary>
            对RepeaterItem的扩展,by lzz 2010-3-24
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.RepeaterItemExtensions.ParentEval(System.Web.UI.WebControls.RepeaterItem,System.String)">
            <summary>
            执行父Repater控件中的数据表达式
            </summary>
            <param name="control">当前的repeater子项</param>
            <param name="expression">表达式</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Data.IDatabaseProvider">
            <summary>
            数据库连接提供接口
            </summary>
        </member>
        <member name="M:net91com.Core.Data.IDatabaseProvider.GetReadConnectionString">
            <summary>
            获取只读数据库的连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.IDatabaseProvider.GetWriteConnectionString">
            <summary>
            获取写入数据库的连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Data.DatabaseProvider">
            <summary>
            提供数据库连接相关方法的具体类
            </summary>
        </member>
        <member name="M:net91com.Core.Data.DatabaseProvider.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="readStr"></param>
            <param name="writeStr"></param>
            <param name="backReadStr"></param>
            <param name="className"></param>
            <param name="second"></param>
            <param name="expNum"></param>
        </member>
        <member name="M:net91com.Core.Data.DatabaseProvider.IsChangedToBack(System.Data.SqlClient.SqlException)">
            <summary>
            根据提供的异常信息，判断是否需要切换到备份数据库
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.DatabaseProvider.GetReadConnectionString">
            <summary>
            获取只读数据库的连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.DatabaseProvider.GetWriteConnectionString">
            <summary>
            获取写入数据库的连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.readConnectionString">
            <summary>
            只读数据库的连接字符串
            </summary>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.writeConnectionString">
            <summary>
            可写数据库的连接字符串
            </summary>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.backReadConnectionString">
            <summary>
            备份数据库的连接字符串，当只读数据库出错时，切换到此数据库（为空时无效）
            </summary>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.ChangeToBackClassName">
            <summary>
            使用此数据库连接的类名，用于判断并统计SqlException发生次数，以便进行切换到备份数据库(为空表示项目只有一个连接串)
            </summary>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.StatSeconds">
            <summary>
            SqlException统计时间，单位秒
            </summary>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.StatExpNum">
            <summary>
            在统计时间内，允许的SqlException发生次数
            </summary>
        </member>
        <member name="P:net91com.Core.Data.DatabaseProvider.ExpTotalNum">
            <summary>
            已发生的SqlException时间统计
            </summary>
        </member>
        <member name="T:net91com.Core.Web.FTP">
            <summary>
            FTP类(来自Discuz!NT)
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.BLOCK_SIZE">
            <summary>
            缓存区大小
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.server">
            <summary>
            服务器连接地址
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.user">
            <summary>
            登陆帐号
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.pass">
            <summary>
            登陆口令
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.port">
            <summary>
            端口号
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.timeout">
            <summary>
            无响应时间（FTP在指定时间内无响应）
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.errormessage">
            <summary>
            服务器错误状态信息
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.messages">
            <summary>
            服务器状态返回信息
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.responseStr">
            <summary>
            服务器的响应信息
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.passive_mode">
            <summary>
            链接模式（主动或被动，默认为被动）
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.bytes_total">
            <summary>
            上传或下载信息字节数
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.file_size">
            <summary>
            上传或下载的文件大小
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.main_sock">
            <summary>
            主套接字
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.main_ipEndPoint">
            <summary>
            要链接的网络地址终结点
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.listening_sock">
            <summary>
            侦听套接字
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.data_sock">
            <summary>
            数据套接字
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.data_ipEndPoint">
            <summary>
            要链接的网络数据地址终结点
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.file">
            <summary>
            用于上传或下载的文件流对象
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.response">
            <summary>
            与FTP服务器交互的状态值
            </summary>
        </member>
        <member name="F:net91com.Core.Web.FTP.bucket">
            <summary>
            读取并保存当前命令执行后从FTP服务器端返回的数据信息
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.#ctor(System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.#ctor(System.String,System.Int32,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
            <param name="mode">链接方式</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.#ctor(System.String,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="server">服务器IP或名称</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
            <param name="mode">链接方式</param>
            <param name="timeout_sec">无响应时间(限时),单位:秒 (小于或等于0为不受时间限制)</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.Fail">
            <summary>
            操作失败
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.SetBinaryMode(System.Boolean)">
            <summary>
            下载文件类型
            </summary>
            <param name="mode">true:二进制文件 false:字符文件</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.SendCommand(System.String)">
            <summary>
            发送命令
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:net91com.Core.Web.FTP.ReadResponse">
            <summary>
            返回服务器端返回信息
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenDataSocket">
            <summary>
            打开数据套接字
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.Disconnect">
            <summary>
            关闭所有链接
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.Connect(System.String,System.Int32,System.String,System.String)">
            <summary>
            链接到FTP服务器
            </summary>
            <param name="server">要链接的IP地址或主机名</param>
            <param name="port">端口号</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.Connect(System.String,System.String,System.String)">
            <summary>
            链接到FTP服务器
            </summary>
            <param name="server">要链接的IP地址或主机名</param>
            <param name="user">登陆帐号</param>
            <param name="pass">登陆口令</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.Connect">
            <summary>
            链接到FTP服务器
            </summary>
        </member>
        <member name="M:net91com.Core.Web.FTP.List">
            <summary>
            获取FTP当前(工作)目录下的文件列表
            </summary>
            <returns>返回文件列表数组</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.ListFiles">
            <summary>
            获取到文件名列表
            </summary>
            <returns>返回文件名列表</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.ListDirectories">
            <summary>
            获取路径列表
            </summary>
            <returns>返回路径列表</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.GetFileDateRaw(System.String)">
            <summary>
            获取原始数据信息.
            </summary>
            <param name="fileName">远程文件名</param>
            <returns>返回原始数据信息.</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.GetFileDate(System.String)">
            <summary>
            得到文件日期.
            </summary>
            <param name="fileName">远程文件名</param>
            <returns>返回远程文件日期</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.GetWorkingDirectory">
            <summary>
            获取FTP上的当前(工作)路径
            </summary>
            <returns>返回FTP上的当前(工作)路径</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.ChangeDir(System.String)">
            <summary>
            跳转服务器上的当前(工作)路径
            </summary>
            <param name="path">要跳转的路径</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.MakeDir(System.String)">
            <summary>
            创建指定的目录
            </summary>
            <param name="dir">要创建的目录</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.RemoveDir(System.String)">
            <summary>
            移除FTP上的指定目录
            </summary>
            <param name="dir">要移除的目录</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.RemoveFile(System.String)">
            <summary>
            移除FTP上的指定文件
            </summary>
            <param name="filename">要移除的文件名称</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.RenameFile(System.String,System.String)">
            <summary>
            重命名FTP上的文件
            </summary>
            <param name="oldfilename">原文件名</param>
            <param name="newfilename">新文件名</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.GetFileSize(System.String)">
            <summary>
            获得指定文件的大小(如果FTP支持)
            </summary>
            <param name="filename">指定的文件</param>
            <returns>返回指定文件的大小</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenUpload(System.String)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">要上传的文件</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenUpload(System.String,System.String)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">本地文件名</param>
            <param name="remotefilename">远程要覆盖的文件名</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenUpload(System.String,System.Boolean)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">本地文件名</param>
            <param name="resume">如果存在,则尝试恢复</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenUpload(System.String,System.String,System.Boolean)">
            <summary>
            上传指定的文件
            </summary>
            <param name="filename">本地文件名</param>
            <param name="remote_filename">远程要覆盖的文件名</param>
            <param name="resume">如果存在,则尝试恢复</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenDownload(System.String)">
            <summary>
            下载指定文件
            </summary>
            <param name="filename">远程文件名称</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenDownload(System.String,System.Boolean)">
            <summary>
            下载并恢复指定文件
            </summary>
            <param name="filename">远程文件名称</param>
            <param name="resume">如文件存在,则尝试恢复</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenDownload(System.String,System.String)">
            <summary>
            下载指定文件
            </summary>
            <param name="remote_filename">远程文件名称</param>
            <param name="localfilename">本地文件名</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.OpenDownload(System.String,System.String,System.Boolean)">
            <summary>
            打开并下载文件
            </summary>
            <param name="remote_filename">远程文件名称</param>
            <param name="local_filename">本地文件名</param>
            <param name="resume">如果文件存在则恢复</param>
        </member>
        <member name="M:net91com.Core.Web.FTP.DoUpload">
            <summary>
            上传文件(循环调用直到上传完毕)
            </summary>
            <returns>发送的字节数</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.DoUpload(System.Int64)">
            <summary>
            上传文件(循环调用直到上传完毕)
            </summary>
            <param name="block_size"></param>
            <returns>发送的字节数</returns>
        </member>
        <member name="M:net91com.Core.Web.FTP.DoDownload">
            <summary>
            下载文件(循环调用直到下载完毕)
            </summary>
            <returns>接收到的字节点</returns>
        </member>
        <member name="P:net91com.Core.Web.FTP.IsConnected">
            <summary>
            当前是否已连接
            </summary>
        </member>
        <member name="P:net91com.Core.Web.FTP.MessagesAvailable">
            <summary>
            当message缓冲区有数据则返回
            </summary>
        </member>
        <member name="P:net91com.Core.Web.FTP.Messages">
            <summary>
            获取服务器状态返回信息, 并清空messages变量
            </summary>
        </member>
        <member name="P:net91com.Core.Web.FTP.ResponseString">
            <summary>
            最新指令发出后服务器的响应
            </summary>
        </member>
        <member name="P:net91com.Core.Web.FTP.BytesTotal">
             <summary>
            在一次传输中,发送或接收的字节数
             </summary>
        </member>
        <member name="P:net91com.Core.Web.FTP.FileSize">
             <summary>
            被下载或上传的文件大小,当文件大小无效时为0
             </summary>
        </member>
        <member name="P:net91com.Core.Web.FTP.PassiveMode">
            <summary>
            链接模式: 
            true 被动模式 [默认]
            false: 主动模式
            </summary>
        </member>
        <member name="T:net91com.Core.Util.CommonEncryptionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Util.CommonEncryptionHelper.Encrypt_PHP(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CommonEncryptionHelper.Decrypt_PHP(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CommonEncryptionHelper.DecodingFromBase64(System.String)">
            <summary>
            将B64字符串转化字节数组
            </summary>
            <param name="base64Str">需要转化的字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CommonEncryptionHelper.EncodingToBase64(System.Byte[])">
            <summary>
            将字节数组转化B64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.CommonEncryptionHelper.Std_Encrypt_MD5(System.String)">
            <summary>
            标准MD5加密
            </summary>
            <param name="AppKey"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Mobile.ResourceSearchService">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Mobile.ResourceSearchService.#ctor(net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="mobile">手机类型</param>
            <param name="resource">资源类型</param>
            <param name="key">搜索关键字</param>
        </member>
        <member name="M:net91com.Core.Mobile.ResourceSearchService.GetTop(System.Int32)">
            <summary>
            获取前N条
            </summary>
            <param name="top">获取条数</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Mobile.ResourceSearchService.GetPage(System.Int32,System.Int32,System.Int32@)">
            <summary>
            获取分页结果
            </summary>
            <param name="ps">每页条数</param>
            <param name="pi">第几页</param>
            <param name="total">总数</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Drawing.ImageHelper">
            <summary>
            实现对图像的简单处理功能
            </summary>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GetImageFormat(System.Drawing.Image)">
            <summary>
            返回图片格式
            </summary>
            <param name="img"></param>
            <returns>jpeg\gif\bmp\png\tif\icon\wmf</returns>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.PicReSize(System.String,System.String,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary> 
            放大缩小图片尺寸 
            </summary> 
            <param name="picPath"></param> 
            <param name="reSizePicPath"></param> 
            <param name="h"></param> 
            <param name="w"></param> 
            <param name="format"></param> 
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenerateMiniature(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图  
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="miniaturePath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param> miniature
            <param name="mode">生成缩略图的方式 HW:指定高宽缩放（可能变形） W:指定宽，高按比例 H:指定高，宽按比例 Cut:指定高宽裁减（不变形）</param>    
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenerateMiniatureByStream(System.IO.Stream,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="stream">用于生成图片的数据流</param>
            <param name="miniaturePath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param> miniature
            <param name="mode">生成缩略图的方式 HW:指定高宽缩放（可能变形） W:指定宽，高按比例 H:指定高，宽按比例 Cut:指定高宽裁减（不变形）</param>     
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenerateMiniatureByImage(System.Drawing.Image,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImage"></param>
            <param name="miniaturePath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param> miniature
            <param name="mode">生成缩略图的方式 HW:指定高宽缩放（可能变形） W:指定宽，高按比例 H:指定高，宽按比例 Cut:指定高宽裁减（不变形）</param>     
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.Modity2LowQualityImage(System.String)">
            <summary>
            修改成低质量图片(节省空间)
            </summary>
            <param name="serverFile">要修改的文件地址</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.Modity2LowQualityImage(System.String,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            修改成特定大小格式的图片
            </summary>
            <param name="serverFile">要修改的文件地址</param>
            <param name="width">宽度，如果大于图片的宽度则取图片宽度，如果为0，取原始宽度</param>
            <param name="height">高度</param>
            <param name="imgFmt">目标图片格式</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenLowQualityImage(System.String,System.String)">
            <summary>
            生成低质量图片
            </summary>
            <param name="serverFile">原始地址</param>
            <param name="savePathFile">目标地址</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenLowQualityImage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            生成低质量的缩略图，文件格式默认与原始格式一样
            </summary>
            <param name="serverFile">原始文件位置</param>
            <param name="savePathFile">保存目标文件位置</param>
            <param name="iWidth">宽度，如果大于图片的宽度则取图片宽度，如果为0，取原始宽度</param>
            <param name="iHeight">高度，同宽度</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenLowQualityImage(System.String,System.String,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat)">
            <summary>
            生成低质量的图标文件
            </summary>
            <param name="serverFile">原始文件位置</param>
            <param name="savePathFile">保存目标文件位置</param>
            <param name="iWidth">宽度，如果大于图片的宽度则取图片宽度，如果为0，取原始宽度</param>
            <param name="iHeight">高度，同宽度</param>
            <param name="imgFmt">图片格式，如果null，那么取原始图片的格式</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenHighQualityImage(System.String,System.String,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            生成高质量的所略图，文件格式默认与原始格式一样
            </summary>
            <param name="serverFile">原始文件位置</param>
            <param name="savePathFile">保存目标文件位置</param>
            <param name="iWidth">宽度，如果大于图片的宽度则取图片宽度，如果为0，取原始宽度</param>
            <param name="iHeight">高度，同宽度</param>
            <param name="bgColor">背景颜色</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenHighQualityImage(System.String,System.String,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Imaging.ImageFormat,System.String,System.Int32,System.Int32)">
            <summary>
            生成高质量的所略图
            </summary>
            <param name="serverFile">原始文件位置</param>
            <param name="savePathFile">保存目标文件位置</param>
            <param name="iWidth">宽度，如果大于图片的宽度则取图片宽度，如果为0，取原始宽度</param>
            <param name="iHeight">高度，同宽度</param>
            <param name="bgColor">背景颜色</param>
            <param name="imgFmt">图片格式，默认与原始文件一样</param>
            <param name="writeText">要在图片上写的文本</param>
            <param name="textX">位置X</param>
            <param name="textY">位置Y</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.ModifyImageWithLogo(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            在图片上叠加Log
            </summary>
            <param name="serverFile">源文件</param>
            <param name="logoFile">Log文件</param>
            <param name="iWidth"></param>
            <param name="iHeight"></param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.ModifyImageWithLogo(System.String,System.String)">
            <summary>
            在图片上叠加Log 默认全图(左上角)
            </summary>
            <param name="serverFile">源文件</param>
            <param name="logoFile">Log文件</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.ModifyImageWithLogo(System.String,System.String,System.Boolean)">
            <summary>
            在图片上叠加Log 默认全图(右下角)
            </summary>
            <param name="serverFile">源文件</param>
            <param name="logoFile">Log文件</param>
            <param name="bRightDown">水印打在图片右下角<remarks>如果水印图片的长或者宽大于原图的长宽，则把水印打在左上角</remarks></param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.GenImageWithLogo(System.String,System.String,System.String,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Imaging.ImageFormat,System.Int32,System.Int32)">
            <summary>
            生成高质量的缩略图
            </summary>
            <param name="serverFile">原始文件位置</param>
            <param name="savePathFile">保存目标文件位置</param>
            <param name="logoFile">图标文件地址</param>
            <param name="iWidth">宽度，如果大于图片的宽度则取图片宽度</param>
            <param name="iHeight">高度，同宽度</param>
            <param name="bgColor">背景颜色</param>
            <param name="imgFmt">图片格式，默认与原始文件一样</param>
            <param name="logoX">位置X</param>
            <param name="logoY">位置Y</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.WriteTextOnImage(System.String,System.String,System.String,System.Drawing.Font,System.Int32,System.Int32)">
            <summary>
            在图片上写文字
            </summary>
            <param name="sourceFile">原始文件位置</param>
            <param name="destFile">保存目标文件位置</param>
            <param name="text">要在图片上写的文本</param>
            <param name="font">字体</param>
            <param name="textX">位置X</param>
            <param name="textY">位置Y</param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.Modify2LowQualityImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            修改成低质量图片，返回Image对象
            </summary>
            <param name="sourceImage">原始图像</param>
            <param name="iWidth">宽度</param>
            <param name="iHeight">高度</param>
            <returns>修改后的Image对象</returns>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.ProduceHighQualityThumb(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成图片缩略图（自定义图片质量）
            </summary>
            <param name="filePath"></param>
            <param name="qualityValue">;0to100最高质量为100</param>
            <param name="iWidth"></param>
            <param name="iHeight"></param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.ProduceHighQualityThumb(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            生成图片缩略图（自定义图片质量）
            </summary>
            <param name="originalFilePath"></param>
            <param name="destFilePath"></param>
            <param name="qualityValue">;0to100最高质量为100</param>
            <param name="iWidth"></param>
            <param name="iHeight"></param>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.#ctor">
            <summary>
            图片
            </summary>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.IsJPG(System.String)">
            <summary>
            判断是否是JPG
            </summary>
            <param name="filePath">文件的完整路径 </param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.CreateRoundedCorner(System.Drawing.Image,net91com.Core.Drawing.ImageHelper.RoundRectanglePosition)">
            <summary>  
            圆角生成（但是只能是一个角）  
            </summary>  
            <param name="image">源图片 Image</param>  
            <param name="roundCorner">圆角位置</param>  
            <returns>处理好的Image</returns>  
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.CreateTransparentRoundedCorner(System.Drawing.Image,net91com.Core.Drawing.ImageHelper.RoundRectanglePosition)">
            <summary>  
            圆角生成（但是只能是一个角）  
            </summary>  
            <param name="image">源图片 Image</param>  
            <param name="roundCorner">圆角位置</param>  
            <returns>处理好的Image</returns>  
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.CreateRoundRectanglePath(System.Drawing.Rectangle,System.Int32,net91com.Core.Drawing.ImageHelper.RoundRectanglePosition)">
            <summary>  
            构建GraphicsPath路径  
            </summary>  
            <param name="rect"></param>  
            <param name="radius"></param>  
            <param name="rrPosition">图片圆角位置</param>  
            <returns>返回GraphicPath</returns>  
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.DrawTransparentRoundCornerImage(System.Drawing.Image)">
            <summary>
            生成圆角图（底色透明）
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Drawing.ImageHelper.DrawTransparentRoundCornerImage(System.Drawing.Image,System.Int32)">
            <summary>
            生成圆角图（底色透明）
            </summary>
            <param name="image"></param>
            <param name="cornerRadius"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Drawing.ImageHelper.RoundRectanglePosition">
            <summary>  
            目标图片的圆角位置  
            </summary>  
        </member>
        <member name="F:net91com.Core.Drawing.ImageHelper.RoundRectanglePosition.TopLeft">
            <summary>  
            左上角  
            </summary>  
        </member>
        <member name="F:net91com.Core.Drawing.ImageHelper.RoundRectanglePosition.TopRight">
            <summary>  
            右上角  
            </summary>  
        </member>
        <member name="F:net91com.Core.Drawing.ImageHelper.RoundRectanglePosition.BottomLeft">
            <summary>  
            左下角  
            </summary>  
        </member>
        <member name="F:net91com.Core.Drawing.ImageHelper.RoundRectanglePosition.BottomRight">
            <summary>  
            右下角  
            </summary>  
        </member>
        <member name="T:net91com.Core.Util.ScoreLevel">
            <summary>
            积分等级实体
            </summary>
        </member>
        <member name="P:net91com.Core.Util.ScoreLevel.MinValue">
            <summary>
            当前等级必须达到的最小积分值
            </summary>
        </member>
        <member name="P:net91com.Core.Util.ScoreLevel.MaxValue">
            <summary>
            当前等级必须达到的最大积分值
            </summary>
        </member>
        <member name="P:net91com.Core.Util.ScoreLevel.Level">
            <summary>
            等级值
            </summary>
        </member>
        <member name="P:net91com.Core.Util.ScoreLevel.Name">
            <summary>
            等级对应的军衔名称(可能多个等级共用一个军衔名称)
            </summary>
        </member>
        <member name="T:net91com.Core.Util.ScoreLevelHelper">
            <summary>
            积分等级辅助类
            </summary>
        </member>
        <member name="M:net91com.Core.Util.ScoreLevelHelper.GetScoreLevel(System.Int32)">
            <summary>
            根据传入的积分值获取对应的等级信息
            对应等级的最少积分值与等级的之间的关系为:
            MinValue = (Level - 1) * 200 + (Level - 1) * (Level - 2) * 100 / 2
            最多积分值与等级的关系为:
            MaxValue = Level * 200 + Level * (Level - 1) * 100 / 2 - 1
            </summary>
            <param name="score"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Extensions.ObjectExtensions">
            <summary>
            对象扩展方法
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.ObjectExtensions.ToInt32(System.Object)">
            <summary>
            将对象转成Int32类型，如果转换失败，则返回-1
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.ObjectExtensions.ToInt32(System.Object,System.Int32)">
            <summary>
            将对象转成Int32类型
            </summary>
            <param name="source"></param>
            <param name="defaultValue">如果转换失败，返回的数值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.ObjectExtensions.ToInt64(System.Object)">
            <summary>
            将对象转成Int64类型，如果转换失败，则返回-1
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.ObjectExtensions.ToInt64(System.Object,System.Int64)">
            <summary>
            将对象转成Int64类型
            </summary>
            <param name="source"></param>
            <param name="defaultValue">如果转换失败，返回的数值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.ObjectExtensions.ToDouble(System.Object)">
            <summary>
            将对象转成double类型，如果转换失败，则返回-1
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.ObjectExtensions.ToDouble(System.Object,System.Double)">
            <summary>
            将对象转成double类型
            </summary>
            <param name="source"></param>
            <param name="defaultValue">如果转换失败，返回的数值</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Data.SqlHelper">
            <summary>
            将常用的数据操作以高性能、可扩展方式进行封装，适用于 Microsoft SQLServer 2000 及以上版本。
            </summary>
        </member>
        <member name="F:net91com.Core.Data.SqlHelper.defaultConnectionString">
            <summary>
            使用默认连接串  用ConnectionString节里面的 LocalMySqlServer
            </summary>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.String)">
            <summary>
            使用默认连接串 执行sql返回一个执行结果
            </summary>
            <param name="commandText">sql文本</param>
            <returns>结果</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.String)">
            <summary>
            使用默认连接串 执行sql返回一个MySqlDataReader
            </summary>
            <param name="commandText">sql文本</param>
            <returns>MySqlDataReader对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.String)">
            <summary>
            使用默认连接串 执行sql返回影响到的行
            </summary>
            <param name="commandText">sql文本</param>
            <returns>影响到的行</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.String)">
            <summary>
            使用默认连接串 执行sql返回一个DataSet
            </summary>
            <param name="commandText">sql文本</param>
            <returns>DataSet对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            将参数数组关系到命令对象。
            任何可输入输出参数或者空值，通过该方法将被分配一个 DbNull 值。
            </summary>
            <param name="command">要添加参数的命令对象</param>
            <param name="commandParameters">被添加到命令对象的参数数组</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.AssignParameterValues(System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Data.DataRow)">
            <summary>
            给参数数组分配数据列值
            </summary>
            <param name="commandParameters">待赋值的参数数组</param>
            <param name="dataRow">保持存储过程参数值的数据行</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            把一数组值赋给参数数组
            </summary>
            <param name="commandParameters">待赋值的参数数组</param>
            <param name="parameterValues">赋值的对象数组</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Boolean@)">
            <summary>
            准备数据操作命令
            </summary>
            <param name="command">待准备的命令对象</param>
            <param name="connection">执行该命令的有效数据库连接</param>
            <param name="transaction">有效数据事务对象，或者 null</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">SqlParameter 参数数组，如果无参数则为 null</param>
            <param name="mustCloseConnection"><c>true</c> 如果打开数据库连接则为 true，否则为 false</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            此方法不支持对输出参数或者存储过程里的返回参数的访问
            
            示例:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">赋值给存储过程输入参数的数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            此方法不支持对输出参数或者存储过程里的返回参数的访问
            
            示例:  
             int result = ExecuteNonQueryWithTimeout(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">赋值给存储过程输入参数的数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.String,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <param name="connectionString">有效的数据库连接字符串</param>
            <param name="spName">储存过程名称</param>
            <param name="commandTimeout">命令执行的超时时间(单位:秒,不允许传入0)</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
            <remarks>
            当对上下文连接（要用连接字符串中的“context connection=true”打开的 SqlConnection）执行命令时，CommandTimeout 将不起作用。
            此属性是在执行命令或处理结果期间所有网络读取的累积超时。 在返回第一行之后，超时仍然可能发生，但只包括网络读取时间，而不包括用户处理时间。
            示例:
            int result = ExecuteNonQueryWithTimeout(conn, "PublishOrders", 100, new SqlParameter("@prodid", 24));
            </remarks>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.Data.SqlClient.SqlConnection,System.String,System.Int32,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryWithTimeout(System.Data.SqlClient.SqlTransaction,System.String,System.Int32,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryWithTimeout(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.String,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32)">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.String,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.String,System.String,System.AsyncCallback,System.Int32,System.Object[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            此方法不支持对输出参数或者存储过程里的返回参数的访问
            
            示例:  
             int result = ExecuteNonQueryAsync(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <param name="parameterValues">赋值给存储过程输入参数的数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.String,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <param name="connectionString">有效的数据库连接字符串</param>
            <param name="spName">储存过程名称</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">命令执行的超时时间(单位:秒,不允许传入0)</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
            <remarks>
            当对上下文连接（要用连接字符串中的“context connection=true”打开的 SqlConnection）执行命令时，CommandTimeout 将不起作用。
            此属性是在执行命令或处理结果期间所有网络读取的累积超时。 在返回第一行之后，超时仍然可能发生，但只包括网络读取时间，而不包括用户处理时间。
            示例:
            int result = ExecuteNonQueryAsync(conn, "PublishOrders", 100, new SqlParameter("@prodid", 24));
            </remarks>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32)">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.Data.SqlClient.SqlConnection,System.String,System.AsyncCallback,System.Int32,System.Object[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32)">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryAsync(System.Data.SqlClient.SqlTransaction,System.String,System.AsyncCallback,System.Int32,System.Object[])">
            <summary>
            对连接异步执行 Transact-SQL 语句并返回受影响的行数。
            </summary>
            <remarks>
            示例:  
             int result = ExecuteNonQueryAsync(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">有效的数据连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用于执行命令的参数数组</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用于执行命令的参数数组</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务</param>
            <param name="spName">存储过程名</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">有效的数据连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用于执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.Data.SqlClient.SqlConnection,System.String,System.Int32,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用于执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetWithTimeout(System.Data.SqlClient.SqlTransaction,System.String,System.Int32,System.Object[])">
            <summary>
            对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <remarks>
            示例:  
             DataSet ds = ExecuteDatasetWithTimeout(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务</param>
            <param name="spName">存储过程名</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},net91com.Core.Data.SqlHelper.SqlConnectionOwnership,System.Data.SqlClient.SqlCommand@)">
            <summary>
            创建并准备数据执行命令对象，同时以适当的 CommandBehavior 属性调用 ExecuteReader 方法。
            </summary>
            <remarks>
            如果创建并打开数据库连接对象，当 DataReader 被关闭时必须关闭数据库连接。
            如果是由调用方提供数据库连接对象，不必进行任何关闭操作，由调用方进行管理。
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="transaction">有效的事务对象，或者为 null</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组，如果不必提供参数数组可设置为 null</param>
            <param name="connectionOwnership">指示调用方是否提供数据库连接，或者由数据访问帮助类创建</param>
            <param name="command">返回关联的Command对象，在大数据量异常时，可以在外部进行Command.Cancel，避免DataReader.Close超时</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlCommand@,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="command">返回关联的Command对象，在大数据量异常时，可以在外部进行Command.Cancel，避免DataReader.Close超时</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},net91com.Core.Data.SqlHelper.SqlConnectionOwnership,System.Data.SqlClient.SqlCommand@)">
            <summary>
            创建并准备数据执行命令对象，同时以适当的 CommandBehavior 属性调用 ExecuteReader 方法。
            </summary>
            <remarks>
            如果创建并打开数据库连接对象，当 DataReader 被关闭时必须关闭数据库连接。
            如果是由调用方提供数据库连接对象，不必进行任何关闭操作，由调用方进行管理。
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="transaction">有效的事务对象，或者为 null</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组，如果不必提供参数数组可设置为 null</param>
            <param name="connectionOwnership">指示调用方是否提供数据库连接，或者由数据访问帮助类创建</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <param name="command">返回关联的Command对象，在大数据量异常时，可以在外部进行Command.Cancel，避免DataReader.Close超时</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlCommand@,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <param name="command">返回关联的Command对象，在大数据量异常时，可以在外部进行Command.Cancel，避免DataReader.Close超时</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlConnection,System.String,System.Int32,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
              SqlDataReader dr = ExecuteReaderWithTimeout(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderWithTimeout(System.Data.SqlClient.SqlTransaction,System.String,System.Int32,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderWithTimeout(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},net91com.Core.Data.SqlHelper.SqlConnectionOwnership)">
            <summary>
            创建并准备数据执行命令对象，同时以适当的 CommandBehavior 属性调用 ExecuteReader 方法。
            </summary>
            <remarks>
            如果创建并打开数据库连接对象，当 DataReader 被关闭时必须关闭数据库连接。
            如果是由调用方提供数据库连接对象，不必进行任何关闭操作，由调用方进行管理。
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="transaction">有效的事务对象，或者为 null</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组，如果不必提供参数数组可设置为 null</param>
            <param name="connectionOwnership">指示调用方是否提供数据库连接，或者由数据访问帮助类创建</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.String,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.String,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.String,System.String,System.AsyncCallback,System.Int32,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlConnection,System.String,System.AsyncCallback,System.Int32,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.AsyncCallback,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
              SqlDataReader dr = ExecuteReaderAsync(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderAsync(System.Data.SqlClient.SqlTransaction,System.String,System.AsyncCallback,System.Int32,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个数据读取对象。
            </summary>
            <remarks>
            示例:  
             SqlDataReader dr = ExecuteReaderAsync(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="callback">异步期间需要调用的Callback函数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.String,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.String,System.String,System.Int32,System.Object[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.Data.SqlClient.SqlConnection,System.String,System.Int32,System.Object[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32)">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarWithTimeout(System.Data.SqlClient.SqlTransaction,System.String,System.Int32,System.Object[])">
            <summary>
            执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <remarks>
            示例:  
             int orderCount = (int)ExecuteScalarWithTimeout(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <param name="commandTimeout">设定Command执行时间，秒，大于0有效</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <remarks>
            示例:  
             XmlReader reader = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的包含"FOR XML AUTO" 的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <remarks>
            示例:  
             XmlReader reader = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的包含"FOR XML AUTO" 的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <remarks>
            示例:  
             XmlReader reader = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">包含 "FOR XML AUTO" 语句的存储过程的名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <remarks>
            示例:  
             XmlReader reader = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的包含"FOR XML AUTO" 的 Transact-SQL 语句或存储过程</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <remarks>
            示例:  
             XmlReader reader = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的包含"FOR XML AUTO" 的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <remarks>
            示例:  
             XmlReader reader = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">有效的事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.String,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, 24);
            </remarks>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>    
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>    
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(conn, "GetOrders", ds, new string[] {"orders"}, 24, 36);
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="transaction">有效的数据事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">有效的数据事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(trans, "GetOrders", ds, new string[]{"orders"}, 24, 36);
            </remarks>
            <param name="transaction">有效的数据事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
            <param name="parameterValues">参数对象数组，赋值为存储过程输入参数</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            在 DataSet 中添加或刷新行以匹配使用 DataSet 名称的数据源中的行，并创建一个名为 TableNames 数组表名。
            </summary>
            <remarks>
            示例:  
             FillDataset(conn, trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="transaction">有效的数据事务对象</param>
            <param name="commandType">获取或设置一个值，该值指示如何解释 CommandText 属性</param>
            <param name="commandText">获取或设置要对数据源执行的Transact-SQL 语句或存储过程</param>
            <param name="dataSet">执行命令后返回包含结果集的数据集</param>
            <param name="tableNames">创建的表映射，该映射允许这些表通过用户自定义名（也可以为真实表名）被引用</param>
            <param name="commandParameters">用来执行命令的参数数组</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.UpdateDataset(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.DataSet,System.String)">
            <summary>
            从名为“Table”的 DataTable 为指定的 DataSet 中每个已插入、已更新或已删除的行调用相应的 INSERT、UPDATE 或 DELETE 语句。
            </summary>
            <remarks>
            示例:  
             UpdateDataset(conn, insertCommand, deleteCommand, updateCommand, dataSet, "Order");
            </remarks>
            <param name="insertCommand">把新记录插入到数据源中的有效的 Transact-SQL 语句或存储过程</param>
            <param name="deleteCommand">从数据源中删除记录的有效的 Transact-SQL 语句或存储过程</param>
            <param name="updateCommand">更新记录到数据源中的有效的 Transact-SQL 语句或存储过程</param>
            <param name="dataSet">用来更新数据源的数据集</param>
            <param name="tableName">用来更新数据源的表</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.String[])">
            <summary>
            创建并返回一个与该连接相关联的 Command 对象。
            </summary>
            <remarks>
            示例:  
             SqlCommand command = CreateCommand(conn, "AddCustomer", "CustomerID", "CustomerName");
            </remarks>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="sourceColumns">一个数组, 被赋值为存储过程参数的源列集</param>
            <returns>有效的 Command 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接执行存储过程并返回受影响的行数
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接执行存储过程
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接执行存储过程
            </summary>
            <param name="transaction">有效的数据事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后受影响的行数</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <param name="connection">有效的数据连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接执行 Transact-SQL 语句并返回 DataSet 数据集。
            </summary>
            <param name="transaction">有效的数据事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回一个包含结果的数据集</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接创建并准备数据执行命令对象。
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接创建并准备数据执行命令对象。
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值对连接创建并准备数据执行命令对象。
            </summary>
            <param name="transaction">有效的数据事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回包含结果的数据读取对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值执行查询，并返回查询所返回的结果集中第一行的第一列。忽略额外的列或行。
            </summary>
            <param name="transaction">有效的数据事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回结果集中第一行的第一列的值</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            通过 DataRow 值作为存储过程输入参数值将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。
            </summary>
            <param name="transaction">有效的数据事务对象</param>
            <param name="spName">存储过程名称</param>
            <param name="dataRow">保持存储过程输入参数值的 DataRow 对象</param>
            <returns>执行命令后返回包含结果集的 XmlReader 对象</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.BulkCopy(System.Data.DataTable,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.Data.SqlClient.SqlRowsCopiedEventHandler)">
            <summary>
            把DataTable里的数据通过SqlBulkCopy复制到目标数据库的指定表中
            </summary>
            <param name="sourceData">数据源</param>
            <param name="targetConnectionString">目标数据库连接字符串</param>
            <param name="targetTableName">目标表名</param>
            <param name="timeOut">超时之前操作完成所需的秒数</param>
            <param name="keepIdentity">是否保留源标识值，如果为false，则由目标分配标识值</param>
            <param name="batchSize">每一批次中的行数。在每一批次结束时，将该批次中的行发送到服务器</param>
            <param name="copiedEventHandler">在每次处理完 batchSize条记录时触发此事件</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.BulkCopy(System.Data.IDataReader,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.Data.SqlClient.SqlRowsCopiedEventHandler)">
            <summary>
            把DataReader里的数据通过SqlBulkCopy复制到目标数据库的指定表中
            </summary>
            <param name="sourceData">数据源</param>
            <param name="targetConnectionString">目标数据库连接字符串</param>
            <param name="targetTableName">目标表名</param>
            <param name="timeOut">超时之前操作完成所需的秒数</param>
            <param name="keepIdentity">是否保留源标识值，如果为false，则由目标分配标识值</param>
            <param name="batchSize">每一批次中的行数。在每一批次结束时，将该批次中的行发送到服务器</param>
            <param name="copiedEventHandler">在每次处理完 batchSize条记录时触发此事件</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelper.GetColNames(System.Data.IDataReader)">
            <summary>
            获取DataReader的每列列名
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="P:net91com.Core.Data.SqlHelper.CommandTimeout">
            <summary>
            获取或设置SqlCommand的CommandTimeout属性，默认30秒，设置小于1时,不生效
            </summary>
        </member>
        <member name="T:net91com.Core.Data.SqlHelper.SqlConnectionOwnership">
            <summary>
            指示调用方是否提供数据库连接，或者由数据访问帮助类创建，这样当调用 ExecuteReader() 时方便我们设置正确适当的 CommandBehavior 属性。
            </summary>
        </member>
        <member name="F:net91com.Core.Data.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>数据库连接属于数据访问帮助类，并由该类管理。</summary>
        </member>
        <member name="F:net91com.Core.Data.SqlHelper.SqlConnectionOwnership.External">
            <summary>数据库连接属于调用方，并由调用方管理。</summary>
        </member>
        <member name="T:net91com.Core.Data.SqlHelperParameterCache">
            <summary>
            提供静态缓存用于存储参数，以使存储过程可以在运行时发现参数。
            </summary>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.DiscoverSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            在运行时发现存储过程的参数集合。
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="includeReturnValueParameter">是否要包括返回值参数</param>
            <returns>待发现的参数数组</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.CloneParameters(System.Data.SqlClient.SqlParameter[])">
            <summary>
            复制参数
            </summary>
            <param name="originalParameters"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            增加参数数组到缓存
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <param name="commandParameters">待缓存的参数数组</param>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            从缓存中得到参数数组
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="commandText">获取或设置要对数据源执行的 Transact-SQL 语句或存储过程</param>
            <returns>得到的参数数组</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            取得存储过程的参数数组
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <returns>取到的参数数组</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            取得存储过程的参数数组
            </summary>
            <param name="connectionString">有效的数据库连接串</param>
            <param name="spName">存储过程名称</param>
            <param name="includeReturnValueParameter">指示返回的参数值是否要被包含的结果里</param>
            <returns>取到的参数数组</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            取得存储过程的参数数组
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <returns>取到的参数数组</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            取得存储过程的参数数组
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="includeReturnValueParameter">指示返回的参数值是否要被包含的结果里</param>
            <returns>取到的参数数组</returns>
        </member>
        <member name="M:net91com.Core.Data.SqlHelperParameterCache.GetSpParameterSetInternal(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            取得存储过程的参数数组
            </summary>
            <param name="connection">有效的数据库连接对象</param>
            <param name="spName">存储过程名称</param>
            <param name="includeReturnValueParameter">指示返回的参数值是否要被包含的结果里</param>
            <returns>取到的参数数组</returns>
        </member>
        <member name="T:net91com.Core.Util.OtherMethod">
            <summary>
            一些不好归类的方法集合
            </summary>
        </member>
        <member name="M:net91com.Core.Util.OtherMethod.GetRndnum(System.Int32,System.Int32)">
            <summary>
            返回一个随机数
            </summary>
            <param name="maxVal">返回的随机数小于这个值</param>
            <param name="minVal">返回的随机数大于等于这个值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.OtherMethod.GetCDNImage(System.String,System.Int32,System.Int32)">
            <summary>
            根据项目类型，返回相应的图片url
            </summary>
            <param name="imgUrl"></param>
            <param name="project">项目类型，300/1500/1800/2500表示百宝箱，使用专用域名</param>
            <param name="domainNum">要设置为哪个域名，比如img8.sjpic.91rb.com，小于0时表示随机</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.OtherMethod.GetCDNImage(System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根据项目类型，返回相应的图片url
            </summary>
            <param name="imgUrl"></param>
            <param name="replaceByProject">是否要根据项目，自动替换非该项目的图片域名</param>
            <param name="project">项目类型，300/1500/1800/2500表示百宝箱，使用专用域名</param>
            <param name="domainNum">要设置为哪个域名，比如img8.sjpic.91rb.com，小于0时表示随机</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Mobile.TMCommentHelper">
            <summary>
            天铭评论调用接口
            </summary>
        </member>
        <member name="M:net91com.Core.Mobile.TMCommentHelper.BuildCommentUrl(System.String,System.String)">
            <summary>
            生成的天铭评论地址，生成成功则返回评论的url
            </summary>
            <param name="title">评论对象的标题</param>
            <param name="backUrl">评论对象的访问地址</param>
            <returns>评论的url地址</returns>
            <exception cref="T:System.ApplicationException">远程服务器返回错误</exception>
        </member>
        <member name="M:net91com.Core.Mobile.TMCommentHelper.BuildCommentUrl(System.String,System.String,System.String)">
            <summary>
            生成的天铭评论地址，生成成功则返回评论的url
            </summary>
            <param name="title">评论对象的标题</param>
            <param name="backUrl">评论对象的访问地址</param>
            <param name="charset"></param>
            <returns>评论的url地址</returns>
            <exception cref="T:System.ApplicationException">远程服务器返回错误</exception>
        </member>
        <member name="M:net91com.Core.Mobile.TMCommentHelper.BuildCommentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            生成的天铭评论地址，生成成功则返回评论的url
            </summary>
            <param name="title">评论对象的标题</param>
            <param name="backUrl">评论对象的访问地址</param>
            <param name="key"></param>
            <param name="charset"></param>
            <returns>评论的url地址</returns>
            <exception cref="T:System.ApplicationException">远程服务器返回错误</exception>
        </member>
        <member name="M:net91com.Core.Mobile.TMCommentHelper.PostComment(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            发表评论到天铭的接口
            </summary>
            <param name="commentUrl">评论接口url(由BuildCommentUrl方法生成的评论url)</param>
            <param name="username">用户妮称</param>
            <param name="content">评论内容</param>
            <param name="charset">评论编码</param>
            <param name="vcode">是否启用验证码，1：表示不启用</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Mobile.TMCommentHelper.PostComment(System.String,System.String,System.String,System.String)">
            <summary>
            发表评论到天铭的接口
            </summary>
            <param name="commentUrl">评论接口url(由BuildCommentUrl方法生成的评论url)</param>
            <param name="username">用户妮称</param>
            <param name="content">评论内容</param>
            <param name="charset">评论编码</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Enums.APKTVResolutionOption">
            <summary>
            APK软件包支持的分辨率类型枚举
            <remarks>该枚举定义为安卓电视过滤使用,因此自定义了当前使用到的分辨率,后期可根据需要继续新增枚举值</remarks>
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKTVResolutionOption.Resolution_unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKTVResolutionOption.Resolution_1280x720">
            <summary>
            1280*720
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKTVResolutionOption.Resolution_1366x768">
            <summary>
            1366*768
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKTVResolutionOption.Resolution_1920x1080">
            <summary>
            armeabi-v7a
            </summary>
        </member>
        <member name="T:net91com.Core.Web.NDCache">
            <summary>
            缓存类，组合了Memcached和Caching.Cache
            </summary>
        </member>
        <member name="M:net91com.Core.Web.NDCache.GetCacheService">
            <summary>
            单体模式返回当前类的实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCache.Add``1(System.String,``0,System.Int64)">
            <summary>
            添加缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <param name="objvalue"></param>
            <param name="lNumofMilliSeconds">毫秒</param>
        </member>
        <member name="M:net91com.Core.Web.NDCache.Add``1(System.String,``0,System.TimeSpan)">
            <summary>
            添加缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <param name="objvalue"></param>
            <param name="tspan"></param>
        </member>
        <member name="M:net91com.Core.Web.NDCache.Insert``1(System.String,``0,System.Int64)">
            <summary>
            添加缓存，缓存存在时，覆盖
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <param name="objvalue"></param>
            <param name="lNumofMilliSeconds">毫秒</param>
        </member>
        <member name="M:net91com.Core.Web.NDCache.Insert``1(System.String,``0,System.TimeSpan)">
            <summary>
            添加缓存，缓存存在时，覆盖
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <param name="objvalue"></param>
            <param name="tspan"></param>
        </member>
        <member name="M:net91com.Core.Web.NDCache.Get``1(System.String)">
            <summary>
            获取值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCache.TryGet``1(System.String,``0@)">
            <summary>
            获取缓存
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <param name="outValue"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCache.Remove(System.String)">
            <summary>
            移除缓存
            </summary>
            <param name="strKey"></param>
        </member>
        <member name="M:net91com.Core.Web.NDCache.BuildMemcachedKey(System.Object[])">
            <summary>
            创建Memcache的缓存
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.NDCacheKeyHelper">
            <summary>
            缓存Key帮助类, 返回的都是小写字母
            </summary>
        </member>
        <member name="M:net91com.Core.Web.NDCacheKeyHelper.GetKey(System.String,net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String,System.Object)">
            <summary>
            获取缓存Key
            </summary>
            <param name="format"></param>
            <param name="mobile"></param>
            <param name="resourceOption"></param>
            <param name="site"></param>
            <param name="arg0"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCacheKeyHelper.GetKey(System.String,net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String,System.Object,System.Object)">
            <summary>
            获取缓存Key
            </summary>
            <param name="format"></param>
            <param name="mobile"></param>
            <param name="resourceOption"></param>
            <param name="site"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCacheKeyHelper.GetKey(System.String,net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String,System.Object,System.Object,System.Object)">
            <summary>
            获取缓存Key
            </summary>
            <param name="format"></param>
            <param name="mobile"></param>
            <param name="resourceOption"></param>
            <param name="site"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCacheKeyHelper.GetKey(System.String,net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            获取缓存Key
            </summary>
            <param name="format"></param>
            <param name="mobile"></param>
            <param name="resourceOption"></param>
            <param name="site"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCacheKeyHelper.GetKey(System.String,net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="mobile"></param>
            <param name="resourceOption"></param>
            <param name="site"></param>
            <param name="arg0"></param>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.NDCacheKeyHelper.GetKey(System.String,net91com.Core.MobileOption,net91com.Core.ResourceTypeOption,System.String,System.Object[])">
            <summary>
            获取缓存Key
            </summary>
            <param name="format"></param>
            <param name="mobile"></param>
            <param name="resourceOption"></param>
            <param name="site"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.LogHelper">
            <summary>
            日志记录类
            </summary>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.SetConfig">
            <summary>
            设置初始值。
            </summary>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteInfo(System.String)">
            <summary>
            写入普通日志消息
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteDebug(System.String)">
            <summary>
            写入Debug日志消息
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteError(System.String)">
            <summary>
            写入错误日志消息
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteException(System.String,System.Exception)">
            <summary>
            写入异常日志信息
            </summary>
            <param name="info"></param>
            <param name="ex"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteFatal(System.String)">
            <summary>
            写入严重错误日志消息
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteComplement(System.String)">
            <summary>
            写入补充日志
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteComplement(System.String,System.Exception)">
            <summary>
            写入补充日志
            </summary>
            <param name="info"></param>
            <param name="ex"></param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteCustom(System.String,System.String)">
            <summary>
            写入自定义日志到自定义目录,本方法对应的Nlog.config配置示例：
             &lt;targets>
               &lt;target name="LogCustom" xsi:type="File" layout="${message}"
                     fileName="${logDirectory}\${event-context:DirOrPrefix}${date:format=yyyyMMddHH}.txt">&lt;/target>
             &lt;/targets>
             &lt;rules>
               &lt;logger name="LogCustom" level="Warn" writeTo="LogCustom" />
            </summary>
            <param name="message">要写入的消息</param>
            <param name="dirOrPrefix">
            写入到的子目录或文件前缀，如果字符串包含\，则是子目录
            比如 aa\bb 则写入的文件名为aa目录下的bb开头加日期
            </param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteCustom(System.String,System.String,System.Boolean)">
            <summary>
            写入自定义日志到自定义目录,本方法对应的Nlog.config配置示例：
             &lt;targets>
               &lt;target name="LogCustom" xsi:type="File" layout="${message}"
                     fileName="${logDirectory}\${event-context:DirOrPrefix}${date:format=yyyyMMddHH}.txt">&lt;/target>
             &lt;/targets>
             &lt;rules>
               &lt;logger name="LogCustom" level="Warn" writeTo="LogCustom" />
            </summary>
            <param name="message">要写入的消息</param>
            <param name="dirOrPrefix">
            写入到的子目录或文件前缀，如果字符串包含\，则是子目录
            比如 aa\bb 则写入的文件名为aa目录下的bb开头加日期
            </param>
            <param name="addIpUrl">是否要附加ip和url等信息</param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteCustom(System.String,System.String,System.String)">
            <summary>
            写入自定义日志到自定义目录,本方法对应的Nlog.config配置示例：
             &lt;targets>
               &lt;target name="LogCustom" xsi:type="File" layout="${message}"
                     fileName="${logDirectory}\${event-context:DirOrPrefix}${date:format=yyyyMMddHH}${event-context:Suffix}.txt">&lt;/target>
             &lt;/targets>
             &lt;rules>
               &lt;logger name="LogCustom" level="Warn" writeTo="LogCustom" />
            </summary>
            <param name="message">要写入的消息</param>
            <param name="dirOrPrefix">
            写入到的子目录或文件前缀，如果字符串包含\，则是子目录
            比如 aa\bb 则写入的文件名为aa目录下的bb开头加日期
            </param>
            <param name="suffix">写入到的文件后缀</param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteCustom(System.String,System.String,System.String,System.Boolean)">
            <summary>
            写入自定义日志到自定义目录,本方法对应的Nlog.config配置示例：
             &lt;targets>
               &lt;target name="LogCustom" xsi:type="File" layout="${message}"
                     fileName="${logDirectory}\${event-context:DirOrPrefix}${date:format=yyyyMMddHH}${event-context:Suffix}.txt">&lt;/target>
             &lt;/targets>
             &lt;rules>
               &lt;logger name="LogCustom" level="Warn" writeTo="LogCustom" />
            </summary>
            <param name="message">要写入的消息</param>
            <param name="dirOrPrefix">
            写入到的子目录或文件前缀，如果字符串包含\，则是子目录
            比如 aa\bb 则写入的文件名为aa目录下的bb开头加日期
            </param>
            <param name="suffix">写入到的文件后缀</param>
            <param name="addIpUrl">是否要附加ip和url等信息</param>
        </member>
        <member name="M:net91com.Core.Util.LogHelper.WriteCustomNoAdd(System.String,System.String,System.String)">
            <summary>
            写入自定义日志到自定义目录,本方法对应的Nlog.config配置示例：
             &lt;targets>
               &lt;target name="LogCustom" xsi:type="File" layout="${message}"
                     fileName="${logDirectory}\${event-context:DirOrPrefix}${date:format=yyyyMMddHH}${event-context:Suffix}.txt">&lt;/target>
             &lt;/targets>
             &lt;rules>
               &lt;logger name="LogCustom" level="Warn" writeTo="LogCustom" />
            </summary>
            <param name="message">要写入的消息</param>
            <param name="dirOrPrefix">
            写入到的子目录或文件前缀，如果字符串包含\，则是子目录
            比如 aa\bb 则写入的文件名为aa目录下的bb开头加日期
            </param>
            <param name="suffix">写入到的文件后缀</param>
        </member>
        <member name="T:net91com.Core.Web.HttpHelper">
            <summary>
            Http请求的辅助方法
            </summary>
        </member>
        <member name="M:net91com.Core.Web.HttpHelper.GetReponseText(System.String)">
            <summary>
            获取指定网址的响应内容，默认以utf-8格式返回
            </summary>
            <param name="sUrl">指定网址</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.HttpHelper.GetReponseText(System.String,System.Text.Encoding)">
            <summary>
             获取指定网址的响应内容，指定编码
            </summary>
            <param name="sUrl">指定网址</param>
            <param name="encode">编码方式</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.HttpHelper.GetReponseText(System.String,System.Text.Encoding,System.String)">
            <summary>
            获取指定网址的响应内容
            </summary>
            <param name="sUrl">指定网址</param>
            <param name="encode">编码方式</param>
            <param name="sAgent">浏览器类型</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.HttpHelper.GetReponseText(System.String,System.Text.Encoding,System.String,System.Int32)">
            <summary>
            获取指定网址的响应内容
            </summary>
            <param name="sUrl">指定网址</param>
            <param name="encode">编码方式</param>
            <param name="sAgent">浏览器类型</param>
            <param name="timeOut">过期时间，以毫秒为单位</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.HttpHelper.RemoteFileExists(System.String,System.Int64@,System.String)">
            <summary>
            判断internet文件是否存在
            </summary>
            <param name="url"></param>
            <param name="fileSize"></param>
            <param name="proxy">代理(xxx.xxx.xxx.xxx:xxx)</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.ConfigHelper">
            <summary>
            获取AppSettings中的配置
            </summary>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetSetting(System.String,System.String)">
            <summary>
            获取appSettings节点值
            </summary>
            <param name="key">节点名称</param>
            <param name="defaultValue">默认值</param>
            <returns>节点值</returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetSetting(System.String)">
            <summary>
            获取appSettings节点值
            </summary>
            <param name="key">节点名称</param>
            <returns>节点值</returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetBoolean(System.String)">
            <summary>
            获取appSettings节点值，并转换为bool值
            </summary>
            <param name="key">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetInt32(System.String,System.Int32)">
            <summary>
            获取appSettings节点值，并转换为int值
            </summary>
            <param name="key">节点名称</param>
            <param name="defaultValue">节点不存在或不是数值时的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetInt64(System.String,System.Int64)">
            <summary>
            获取appSettings节点值，并转换为long值
            </summary>
            <param name="key">节点名称</param>
            <param name="defaultValue">节点不存在或不是数值时的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetDateTime(System.String,System.Nullable{System.DateTime})">
            <summary>
            获取appSettings节点值，并转换为DateTime值
            </summary>
            <param name="key">节点名称</param>
            <param name="defaultValue">节点不存在或不是时间时的默认值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetEncSetting(System.String,System.String)">
            <summary>
            获取加密了的appSettings节点值
            </summary>
            <param name="key">节点名称</param>
            <param name="defaultValue">默认值</param>
            <returns>节点值</returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetConnectionString(System.String,System.String)">
            <summary>
            获取指定名称的连接字符串
            </summary>
            <param name="connName">连接串节点名称</param>
            <param name="mKey">加密Key</param>
            <returns>解密后的连接串</returns>
        </member>
        <member name="M:net91com.Core.Util.ConfigHelper.GetConnectionString(System.String)">
            <summary>
            获取指定名称的连接字符串
            </summary>
            <param name="connName">用默认的key获取获取指定名称的连接字符串</param>
            <returns>解密后的连接串</returns>
        </member>
        <member name="P:net91com.Core.Util.ConfigHelper.SettingsCollection">
            <summary>
            应用程序配置节点集合属性
            </summary>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Extensions.Int64Extensions">
            <summary>
            long扩展
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.Int64Extensions.ToFileSize(System.Int64)">
            <summary>
            将指定的长整值转换为对应的字节大小
            </summary>
            <param name="FileSize"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.UserControlRender`1">
            <summary>
            将用户控件解析为html代码
            </summary>
            <remarks>http://www.cnblogs.com/jeffreyzhao/archive/2007/12/30/usercontrol_as_an_template.html</remarks>
            <typeparam name="T">用户控件类型</typeparam>
        </member>
        <member name="M:net91com.Core.Web.UserControlRender`1.LoadViewControl(System.String)">
            <summary>
            载入用户控件
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.UserControlRender`1.RenderView(`0)">
            <summary>
            输出控件的HTML
            </summary>
            <remarks>调用本方法前需要先调用LoadViewControl方法</remarks>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.AccountInfoService.accountcheckws">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.#ctor">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserIdByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserIdByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserIdByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserNameByUserId(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserNameByUserIdAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserNameByUserIdAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUserid(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUseridAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUseridAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsername(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsernameAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsernameAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUserid_Content(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUserid_ContentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUserid_ContentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsername_Content(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsername_ContentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsername_ContentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPWDEmailByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPWDEmailByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPWDEmailByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_Crm(System.String,System.String,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_CrmAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_CrmAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_Crm_Zf(System.String,System.Int32,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_Crm_ZfAsync(System.String,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_Crm_ZfAsync(System.String,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_Common(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_CommonAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_CommonAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserName(System.String,System.String,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserId(System.String,System.String,System.String[]@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserIdAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserIdAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserMobileNoByUin(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserMobileNoByUinAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Get91UserMobileNoByUinAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Update91UserMobileNoByUin(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Update91UserMobileNoByUinAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Update91UserMobileNoByUinAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUserAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUserAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_Zf(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_ZfAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_ZfAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_Common(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_CommonAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_CommonAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_Common_AllGame(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_Common_AllGameAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_Common_AllGameAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindOne(System.String,System.String,System.String,System.Boolean,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindOneAsync(System.String,System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindOneAsync(System.String,System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindTwo(System.String,System.String,System.String,System.Boolean,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindTwoAsync(System.String,System.String,System.String,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindTwoAsync(System.String,System.String,System.String,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindThree(System.String,System.String,System.String,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindThreeAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindThreeAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindFour(System.String,System.String,System.String,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindFourAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindFourAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindFive(System.String,System.String,System.String,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindFiveAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.FindFiveAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_Crm(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_CrmAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_CrmAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserMobileStatus_Crm(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserMobileStatus_CrmAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserMobileStatus_CrmAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Account91RegisterForDepartment(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Account91RegisterForDepartmentAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Account91RegisterForDepartmentAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Account91CheckForDepartment(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Account91CheckForDepartmentAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Account91CheckForDepartmentAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_TBS(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_TBSAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_TBSAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserLogin_Zf_Common(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserLogin_Zf_CommonAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserLogin_Zf_CommonAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.UpdateUserPassword_Zf_Common(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.UpdateUserPassword_Zf_CommonAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.UpdateUserPassword_Zf_CommonAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserHistoryPassword(System.String,System.String,System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserHistoryPasswordAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckUserHistoryPasswordAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Check91UserHistoryPassword4GameTools(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Check91UserHistoryPassword4GameToolsAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.Check91UserHistoryPassword4GameToolsAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKey(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyStatus(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyStatusAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyStatusAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserId(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserIdAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserIdAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserName_KX(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserName_KXAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserName_KXAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserID_KX(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserID_KXAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserID_KXAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserName(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserNameAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserNameAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserID(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserIDAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserIDAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserName(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserNameAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserNameAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserID(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserIDAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserIDAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountInfoService.accountcheckws.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserIdByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserNameByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUseridCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsernameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUserid_ContentCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeByUsername_ContentCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserPWDEmailByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_CrmCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_Crm_ZfCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfo_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Get91UserRegInfoByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Get91UserMobileNoByUinCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Update91UserMobileNoByUinCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUserCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_ZfCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.OnlineKickUser_Common_AllGameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.FindOneCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.FindTwoCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.FindThreeCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.FindFourCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.FindFiveCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_CrmCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserMobileStatus_CrmCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Account91RegisterForDepartmentCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Account91CheckForDepartmentCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserPasssafeStatus_TBSCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserLogin_Zf_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.UpdateUserPassword_Zf_CommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckUserHistoryPasswordCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.Check91UserHistoryPassword4GameToolsCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.BindUserMobileKeyStatusCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetNickNameByUserIdCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserName_KXCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserRegSourceByUserID_KXCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.GetUserPassWordByUserIDCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserNameCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountInfoService.accountcheckws.CheckNewCardTypeByUserIDCompleted">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserIdByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserIdByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserIdByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserIdByUserNameCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserNameByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserNameByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserNameByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserNameByUserIdCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUseridCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUseridCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeByUseridCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUsernameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUsernameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeByUsernameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUserid_ContentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUserid_ContentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeByUserid_ContentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUsername_ContentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeByUsername_ContentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeByUsername_ContentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserPWDEmailByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserPWDEmailByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserPWDEmailByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserPWDEmailByUserNameCompletedEventArgs.pwdemail">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfo_CrmCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfo_CrmCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfo_CrmCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfo_CrmCompletedEventArgs.userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfo_Crm_ZfCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfo_Crm_ZfCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfo_Crm_ZfCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfo_Crm_ZfCompletedEventArgs.returnUserInfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfo_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfo_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfo_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfo_CommonCompletedEventArgs.userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfoByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfoByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfoByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfoByUserNameCompletedEventArgs.userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfoByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserRegInfoByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfoByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserRegInfoByUserIdCompletedEventArgs.userinfo">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserMobileNoByUinCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Get91UserMobileNoByUinCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserMobileNoByUinCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Get91UserMobileNoByUinCompletedEventArgs.mobileno">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Update91UserMobileNoByUinCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Update91UserMobileNoByUinCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Update91UserMobileNoByUinCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUserCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUserCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.OnlineKickUserCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUser_ZfCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUser_ZfCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.OnlineKickUser_ZfCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUser_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUser_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.OnlineKickUser_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUser_Common_AllGameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.OnlineKickUser_Common_AllGameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.OnlineKickUser_Common_AllGameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindOneCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindOneCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindOneCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindOneCompletedEventArgs.funcstatus">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindTwoCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindTwoCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindTwoCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindTwoCompletedEventArgs.funcstatus">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindThreeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindThreeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindThreeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindThreeCompletedEventArgs.funcstatus">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindFourCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindFourCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindFourCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindFourCompletedEventArgs.funcstatus">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindFiveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.FindFiveCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindFiveCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.FindFiveCompletedEventArgs.funcstatus">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_CrmCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_CrmCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_CrmCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserMobileStatus_CrmCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserMobileStatus_CrmCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserMobileStatus_CrmCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Account91RegisterForDepartmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Account91RegisterForDepartmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Account91RegisterForDepartmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Account91CheckForDepartmentCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Account91CheckForDepartmentCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Account91CheckForDepartmentCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_TBSCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_TBSCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_TBSCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserPasssafeStatus_TBSCompletedEventArgs.tbs_content">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserLogin_Zf_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserLogin_Zf_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserLogin_Zf_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserLogin_Zf_CommonCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserLogin_Zf_CommonCompletedEventArgs.sex">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserLogin_Zf_CommonCompletedEventArgs.uin">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.UpdateUserPassword_Zf_CommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.UpdateUserPassword_Zf_CommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.UpdateUserPassword_Zf_CommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserHistoryPasswordCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckUserHistoryPasswordCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserHistoryPasswordCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckUserHistoryPasswordCompletedEventArgs.strcheckresults">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Check91UserHistoryPassword4GameToolsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.Check91UserHistoryPassword4GameToolsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.Check91UserHistoryPassword4GameToolsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.BindUserMobileKeyCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.BindUserMobileKeyCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.BindUserMobileKeyCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.BindUserMobileKeyStatusCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.BindUserMobileKeyStatusCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.BindUserMobileKeyStatusCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetNickNameByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetNickNameByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetNickNameByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetNickNameByUserNameCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetNickNameByUserIdCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetNickNameByUserIdCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetNickNameByUserIdCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetNickNameByUserIdCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserRegSourceByUserName_KXCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserRegSourceByUserName_KXCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserRegSourceByUserName_KXCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserRegSourceByUserID_KXCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserRegSourceByUserID_KXCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserRegSourceByUserID_KXCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserPassWordByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserPassWordByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserPassWordByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserPassWordByUserNameCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserPassWordByUserIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.GetUserPassWordByUserIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserPassWordByUserIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.GetUserPassWordByUserIDCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckNewCardTypeByUserNameCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckNewCardTypeByUserNameCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckNewCardTypeByUserNameCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckNewCardTypeByUserIDCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountInfoService.CheckNewCardTypeByUserIDCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountInfoService.CheckNewCardTypeByUserIDCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.Util.IPLocator">
            <summary>
            纯真IP数据库操作类,首次使用，请先调用静态方法Initialize(dat文件路径)进行初始化，
            再通过IPLocator.Instance.Query查询
            </summary>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.Initialize(System.String)">
            <summary>
            初始化方法，必须先调用这个方法进行初始化
            </summary>
            <param name="dataPath">纯真IP数据库文件地址</param>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.Query(System.String,System.String)">
            <summary>
            查询并返回指定IPv4的实体，null表示不是正确IP，或属于环回地址，或属于局域网地址
            </summary>
            <param name="ip"></param>
            <param name="dataPath"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.Query(System.String)">
            <summary>
            查询并返回指定IPv4的实体，null表示不是正确IP，或属于环回地址，或属于局域网地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.Query">
            <summary>
            查询并返回指定IPv4的实体，null表示不是正确IP，或属于环回地址，或属于局域网地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.ConvertIpToLong(System.String)">
            <summary>
            把ipv4格式转换为长整型
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.ConvertLongToIP(System.Int64)">
            <summary>
            把长整型转换为ipv4格式
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.IsLocalNetwork(System.Net.IPAddress)">
            <summary>
            判断是否局域网地址
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.IsSubnet(System.Net.IPAddress,System.Net.IPAddress,System.Net.IPAddress)">
            <summary>
            判断ip是否属于subnet网段
            </summary>
            <param name="ip">IP</param>
            <param name="subnet">网段</param>
            <param name="mask">子网掩码</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.IsValidIPAddress(System.String)">
            <summary>
            判断输入的字符串，是否有效的IPv4地址
            </summary>
            <param name="strIPAddress"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.IPLocator.ExportToSqlServer(System.String,System.String)">
            <summary>
            把全部ip数据导入SqlServer数据库(注意：会清空目标表）
            </summary>
            <param name="connectionString"></param>
            <param name="tbName">表如果存在，会清空；如果不存在，会自动创建</param>
        </member>
        <member name="P:net91com.Core.Util.IPLocator.Count">
            <summary>
            返回总ip纪录数
            </summary>
        </member>
        <member name="T:net91com.Core.Util.IPLocation">
            <summary>
            返回纯真IP实体
            </summary>
        </member>
        <member name="M:net91com.Core.Util.IPLocation.ToString">
            <summary>
            重载ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:net91com.Core.Util.IPLocation.IP">
            <summary>
            字符串形式的IP
            </summary>
        </member>
        <member name="P:net91com.Core.Util.IPLocation.Country">
            <summary>
            对应国家或地区,如：安徽省安庆市枞阳县；白俄罗斯
            </summary>
        </member>
        <member name="P:net91com.Core.Util.IPLocation.Area">
            <summary>
            对应位置，如：电信、联通 或 柞村镇昌盛网吧
            </summary>
        </member>
        <member name="P:net91com.Core.Util.IPLocation.Operator">
            <summary>
            根据Area，判断所属的运营商
            </summary>
        </member>
        <member name="T:net91com.Core.Util.NetOperator">
            <summary>
            网络运营商
            </summary>
        </member>
        <member name="F:net91com.Core.Util.NetOperator.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:net91com.Core.Util.NetOperator.Telecom">
            <summary>
            电信
            </summary>
        </member>
        <member name="F:net91com.Core.Util.NetOperator.Unicom">
            <summary>
            联通
            </summary>
        </member>
        <member name="F:net91com.Core.Util.NetOperator.CMCC">
            <summary>
            移动
            </summary>
        </member>
        <member name="F:net91com.Core.Util.NetOperator.CRC">
            <summary>
            铁通
            </summary>
        </member>
        <member name="T:net91com.Core.Util.FunctionKeySection">
            <summary>
            接入接口管理系统中所有方法所需KEY，配置管理
            </summary>
        </member>
        <member name="M:net91com.Core.Util.FunctionKeySection.#ctor">
            <summary>
            缺省构造器
            </summary>
        </member>
        <member name="P:net91com.Core.Util.FunctionKeySection.Instance">
            <summary>
            返回配置管理对象
            </summary>
        </member>
        <member name="P:net91com.Core.Util.FunctionKeySection.RegisterAccount_Key">
            <summary>
            RegisterAccount方法需要的KEY（"7f4fa08c-5b92-44fa-98a7-122697fe3f41"）
            </summary>
        </member>
        <member name="P:net91com.Core.Util.FunctionKeySection.GetUserIDByName_Key">
            <summary>
            GetUserIDByName方法需要的KEY（"d69154de-ea58-4b17-a19f-46bf81f3a023"）
            </summary>
        </member>
        <member name="P:net91com.Core.Util.FunctionKeySection.ExistAccount_Key">
            <summary>
            ExistAccount方法需要的KEY（"faa92ce5-d029-44e4-a803-45c80a7ac3a4"）
            </summary>
        </member>
        <member name="T:net91com.Core.Util.EnumHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Util.EnumHelper.GetNVCFromEnumValue(System.Type)">
            <summary>
            从枚举类型返回枚举值和描述信息的组合字符串（如：1|共享,2|免费,3|试用）
            </summary>
            <param name="enumType">Type,该参数的格式为typeof(需要读的枚举类型)</param>
            <returns>键值对</returns>
        </member>
        <member name="T:net91com.Core.Data.OdbcParamHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Data.OdbcParamHelper.MakeParam(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
            <param name="Direction"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcParamHelper.MakeOutParam(System.String,System.Data.Odbc.OdbcType,System.Int32)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcParamHelper.MakeInParam(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcParamHelper.MakeInParam(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.PlatformHelper">
            <summary>
            手机平台辅助类
            </summary>
        </member>
        <member name="M:net91com.Core.Util.PlatformHelper.GetPlatformFromUserAgent(System.String)">
            <summary>
            根据useragent判断手机平台类型(当前只判断了iphone(ipad当做iphone平台)和android两种平台，其他平台未判断)
            </summary>
            <param name="useragent"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.PlatformHelper.GetRealPlatformFromUserAgent(System.String)">
            <summary>
            根据useragent判断手机平台类型(当前只判断了iphone、ipad、android pad、android这四平台，其他平台未判断)
            </summary>
            <param name="useragent"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Extensions.StringExtensions">
            <summary>
            字符串扩展方法
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.GetRealLength(System.String)">
            <summary>
            获取字符串的实际长度(按单字节)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.SubString(System.String,System.Int32,System.String)">
            <summary>
            取得固定长度的字符串(按单字节截取)。
            </summary>
            <param name="source">源字符串</param>
            <param name="resultLength">截取长度</param>
            <param name="prefix">进行了截取操作时，要增加的后缀</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.SubString(System.String,System.Int32)">
            <summary>
            取得固定长度的字符串(按单字节截取)。
            </summary>
            <param name="source">源字符串</param>
            <param name="resultLength">截取长度</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.SubStr(System.String,System.Int32)">
            <summary>
            取得固定长度字符的字符串，后面加上…(按单字节截取)
            </summary>
            <param name="source"></param>
            <param name="resultLength"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsNullOrEmpty(System.String)">
            <summary>
            判断字符串是否为null或为空.判断为空操作前先进行了Trim操作。
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsInteger(System.String)">
            <summary>
            判断字符串是否为整型
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsEmail(System.String)">
            <summary>
            Email 格式是否合法
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsIP(System.String)">
            <summary>
            判断是否IP
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsLetterOrNumber(System.String)">
            <summary>
            检查字符串是否为A-Z、0-9及下划线以内的字符
            </summary>
            <param name="source">被检查的字符串</param>
            <returns>是否有特殊字符</returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsSpecialChar(System.String)">
            <summary>
            验输入字符串是否含有“/\:.?*|$]”特殊字符
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsChineseChar(System.String)">
            <summary>
            是否全为中文/日文/韩文字符
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ContainChineseChar(System.String)">
            <summary>
            是否包含中文/日文/韩文字符
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsDoubleChar(System.String)">
            <summary>
            是否包含双字节字符(允许有单字节字符)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsDate(System.String)">
            <summary>
            是否为日期型字符串
            </summary>
            <param name="source">日期字符串(2005-6-30)</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsTime(System.String)">
            <summary>
            是否为时间型字符串
            </summary>
            <param name="source">时间字符串(15:00:00)</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsDateTime(System.String)">
            <summary>
            是否为日期+时间型字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IsPhysicalPath(System.String)">
            <summary>
            是否为文件物理路径
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToBase64(System.String)">
            <summary>
            将字符串使用base64算法加密
            </summary>
            <param name="source">待加密的字符串</param>
            <returns>加码后的文本字符串</returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.FromBase64(System.String)">
            <summary>
            从Base64编码的字符串中还原字符串，支持中文
            </summary>
            <param name="source">Base64加密后的字符串</param>
            <returns>还原后的文本字符串</returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToBase64(System.String,System.Text.Encoding)">
            <summary>
            将字符串使用base64算法加密
            </summary>
            <param name="source">待加密的字符串</param>
            <param name="encode">编码方式</param>
            <returns>加码后的文本字符串</returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.FromBase64(System.String,System.Text.Encoding)">
            <summary>
            从Base64编码的字符串中还原字符串，支持中文
            </summary>
            <param name="source">Base64加密后的字符串</param>
            <param name="encode">编码方式</param>
            <returns>还原后的文本字符串</returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.FromGBToUTF8(System.String)">
            <summary>
            将 GB2312 值转换为 UTF8 字符串(如：测试 -> 娴嬭瘯 )
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.FromUTF8ToGB(System.String)">
            <summary>
            将 UTF8 值转换为 GB2312 字符串 (如：娴嬭瘯 -> 测试)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.FromHex(System.String)">
            <summary>
            由16进制转为汉字字符串（如：B2E2 -> 测 ）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToHex(System.String)">
            <summary>
            字符串转为16进制字符串（如：测 -> B2E2 ）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToUnicode(System.String)">
            <summary>
            字符串转为unicode字符串（如：测试 -> &#27979;&#35797;）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToUTF8(System.String)">
            <summary>
            字符串转为UTF8字符串（如：测试 -> \u6d4b\u8bd5）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToSafeSql(System.String)">
            <summary>
            将字符串转为安全的Sql字符串，不建议使用。尽可能使用参数化查询来避免
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToSafeJsString(System.String)">
            <summary>
            将字符串转换化安全的js字符串值（对字符串中的' "进行转义) 
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToEscapeRegChars(System.String)">
            <summary>
            注释like操作字符串中出现的特殊符号
            </summary>
            <remarks>注意：如果like查询中本身有使用到特殊字符，请不要使用此方法</remarks>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.WrapWithCData(System.String)">
            <summary>
            将字符串包装成 &lt;![CDATA[字符串]]&gt; 形式
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToSafeXmlString(System.String)">
            <summary>
            将字符串转换化安全的XML字符串值
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.NarrowToSmall(System.String)">
            <summary>   
            将字母，数字由全角转化为半角   
            </summary>   
            <returns></returns>   
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.NarrowToBig(System.String)">
            <summary>   
            将字母，数字由半角转化为全角   
            </summary>   
            <param name="inputString"></param>   
            <returns></returns>   
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.NarrowToBig(System.String,System.Collections.Generic.List{System.Char})">
            <summary>   
            将字母，数字由半角转化为全角   
            </summary>   
            <param name="inputString"></param>   
            <param name="lstTODOChar">需要处理的字符,默认全部处理</param>   
            <returns></returns>   
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToInt32(System.String)">
            <summary>
            将字符串转成Int32类型，如果转换失败，则返回-1
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToInt32(System.String,System.Int32)">
            <summary>
            将字符串转成Int32类型
            </summary>
            <param name="source">源字符串</param>
            <param name="defaultValue">如果转换失败，返回的数值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToInt64(System.String)">
            <summary>
            将字符串转成Int64类型，如果转换失败，则返回-1
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToInt64(System.String,System.Int64)">
            <summary>
            将字符串转成Int64类型
            </summary>
            <param name="source">源字符串</param>
            <param name="defaultValue">如果转换失败，返回的数值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToDouble(System.String)">
            <summary>
            将字符串转成double类型，如果转换失败，则返回-1
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToDouble(System.String,System.Double)">
            <summary>
            将字符串转成double类型
            </summary>
            <param name="source">源字符串</param>
            <param name="defaultValue">如果转换失败，返回的数值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToDateTime(System.String)">
            <summary>
            将字符串转成DateTime类型，如果转换失败，则返回当前时间
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToDateTime(System.String,System.DateTime)">
            <summary>
            将字符串转成DateTime类型
            </summary>
            <param name="source">源字符串</param>
            <param name="defaultValue">如果转换失败，返回的默认时间</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToBoolean(System.String)">
            <summary>
            将字符串转成Boolean类型，如果转换失败，则返回false
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToEnum``1(System.String,``0)">
            <summary>
            将字符串转成指定的枚举类型(字符串可以是枚举的名称也可以是枚举值)
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="source">源字符串</param>
            <param name="defaultValue">如果转换失败，返回默认的枚举项</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ToEnumExt``1(System.String,``0)">
            <summary>
            将字符串转成指定的枚举类型(字符串可以是枚举的名称也可以是枚举值)
            <remarks>支持枚举值的并集</remarks>
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="source">源字符串</param>
            <param name="defaultValue">如果转换失败，返回默认的枚举项</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.EqualsOrdinal(System.String,System.String)">
            <summary>
            比较字符串是否相同（区分大小写）
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            比较字符串是否相同（不区分大小写）
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IndexOrdinal(System.String,System.String)">
            <summary>
            查找字符串位置（区分大小写）
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.IndexIgnoreCase(System.String,System.String)">
            <summary>
            查找字符串位置（不区分大小写）
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.ReplaceNonValidChars(System.String,System.String)">
            <summary>
            去除文件名中不可用于文件名的11个字符
            </summary>
            <param name="filenameNoDir"></param>
            <param name="replaceWith">用什么字符串替换</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.RemoveNonPrintChars(System.String)">
            <summary>
            去除非打印字符
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.GetPinYin(System.String)">
            <summary>
            获取汉字字符串的首字母
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.GetChineseSpell(System.String)">
            <summary>
            取得汉字字符串的拼音的首字母
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.getSpell(System.String)">
            <summary>
            取得汉字字符的拼音的首字母
            </summary>
            <param name="cnChar"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.SundaySearch(System.String,System.String)">
            <summary>
            更高效的算法，取代String.IndexOf(value, StringComparison)方法
            </summary>
            <param name="text"></param>
            <param name="pattern"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.SundaySearch(System.String,System.String,System.Boolean)">
            <summary>
            更高效的算法，取代String.IndexOf(value, StringComparison)方法
            </summary>
            <param name="text"></param>
            <param name="pattern"></param>
            <param name="ignoreCase">是否忽略字母的大小写（只支持字母）</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.CharEquals(System.Char,System.Char,System.Boolean)">
            <summary>
            比较2个字符是否相等
            </summary>
            <param name="ch"></param>
            <param name="pattern"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.StringExtensions.GetHashCode32(System.String,System.Boolean)">
            <summary>
            在32位系统和64位系统上生成的HashCode会不一致，请统一使用此方法获取哈希值
            </summary>
            <param name="s"></param>
            <param name="Abs">是否只返回绝对值</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Data.OdbcHelper">
            <summary>
            网络上共享的 OdbcHelper 原汁原味 没有做修改
            </summary>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.AttachParameters(System.Data.Odbc.OdbcCommand,System.Data.Odbc.OdbcParameter[])">
            <summary>
            This method is used to attach array of OdbcParameters to a OdbcCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of OdbcParameters tho be added to command</param>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.AssignParameterValues(System.Data.Odbc.OdbcParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of OdbcParameters.
            </summary>
            <param name="commandParameters">array of OdbcParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.PrepareCommand(System.Data.Odbc.OdbcCommand,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">the OdbcCommand to be prepared</param>
            <param name="connection">a valid OdbcConnection, on which to execute this command</param>
            <param name="transaction">a valid OdbcTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OdbcParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored prcedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns no resultset and takes no parameters) against the provided OdbcConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns no resultset) against the specified OdbcConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.Data.Odbc.OdbcConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns no resultset) against the specified OdbcConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns no resultset and takes no parameters) against the provided OdbcTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns no resultset) against the specified OdbcTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteNonQuery(System.Data.Odbc.OdbcTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns no resultset) against the specified 
            OdbcTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a resultset and takes no parameters) against the provided OdbcConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a resultset) against the specified OdbcConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.Data.Odbc.OdbcConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a resultset) against the specified OdbcConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a resultset and takes no parameters) against the provided OdbcTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a resultset) against the specified OdbcTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteDataset(System.Data.Odbc.OdbcTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a resultset) against the specified 
            OdbcTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[],net91com.Core.Data.OdbcHelper.OdbcConnectionOwnership)">
            <summary>
            Create and prepare a OdbcCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">a valid OdbcConnection, on which to execute this command</param>
            <param name="transaction">a valid OdbcTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of OdbcParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">indicates whether the connection parameter was provided by the caller, or created by OdbcHelper</param>
            <returns>OdbcDataReader containing the results of the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             OdbcDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             OdbcDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             OdbcDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a resultset and takes no parameters) against the provided OdbcConnection. 
            </summary>
            <remarks>
            e.g.:  
             OdbcDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a resultset) against the specified OdbcConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             OdbcDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a resultset) against the specified OdbcConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             OdbcDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a resultset and takes no parameters) against the provided OdbcTransaction. 
            </summary>
            <remarks>
            e.g.:  
             OdbcDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a resultset) against the specified OdbcTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              OdbcDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteReader(System.Data.Odbc.OdbcTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a resultset) against the specified
            OdbcTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             OdbcDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a OdbcDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a 1x1 resultset and takes no parameters) against the provided OdbcConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.Data.Odbc.OdbcConnection,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a 1x1 resultset) against the specified OdbcConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.Data.Odbc.OdbcConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a 1x1 resultset) against the specified OdbcConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">a valid OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a OdbcCommand (that returns a 1x1 resultset and takes no parameters) against the provided OdbcTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.Data.Odbc.OdbcTransaction,System.Data.CommandType,System.String,System.Data.Odbc.OdbcParameter[])">
            <summary>
            Execute a OdbcCommand (that returns a 1x1 resultset) against the specified OdbcTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new OdbcParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelper.ExecuteScalar(System.Data.Odbc.OdbcTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a OdbcCommand (that returns a 1x1 resultset) against the specified
            OdbcTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">a valid OdbcTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="T:net91com.Core.Data.OdbcHelper.OdbcConnectionOwnership">
            <summary>
            this enum is used to indicate whether the connection was provided by the caller, or created by OdbcHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:net91com.Core.Data.OdbcHelper.OdbcConnectionOwnership.Internal">
            <summary>Connection is owned and managed by OdbcHelper</summary>
        </member>
        <member name="F:net91com.Core.Data.OdbcHelper.OdbcConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:net91com.Core.Data.OdbcHelperParameterCache">
            <summary>
            OdbcHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelperParameterCache.DiscoverSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            resolve at run time the appropriate set of OdbcParameters for a stored procedure
            </summary>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">whether or not to include their return value parameter</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of OdbcParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <returns>an array of OdbcParameters</returns>
        </member>
        <member name="M:net91com.Core.Data.OdbcHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of OdbcParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a OdbcConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">a bool value indicating whether the return value parameter should be included in the results</param>
            <returns>an array of OdbcParameters</returns>
        </member>
        <member name="T:net91com.Core.Web.WebHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetRealIP">
            <summary>
            获得技术部IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetIP">
            <summary>
            获得技术部IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetIpLst">
            <summary>
            返回UserHostAddress;HTTP_X_REAL_IP;HTTP_NDUSER_FORWARDED_FOR_HAPROXY
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetServerIpList">
            <summary>
            获取本机所有IPV4地址列表
            </summary>
            <returns>本机所有IPV4地址列表，以分号分隔</returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.Int32ParseFromQueryString(System.String)">
            <summary>
            获取url参数的整型值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.Int64ParseFromQueryString(System.String)">
            <summary>
            获取url参数的长整型值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.DecimalParseFromQueryString(System.String)">
            <summary>
            获取url参数的Decimal类型值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.DateParseFromQueryString(System.String,System.String)">
            <summary>
            获取url参数的日期类型值
            </summary>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.DateParseFromQueryString(System.String)">
            <summary>
            获取url参数的日期类型值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.ConvertIPToLong(System.String)">
            <summary>
            将IP地址转成长整型
            </summary>
            <param name="ip">待转换的IP地址</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.ConvertLongToIP(System.Int64)">
            <summary>
            将长整型转成IP地址
            </summary>
            <param name="ipLong">长整型</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.FilterSql(System.String)">
            <summary>
            过滤sql语句
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.WipeScript(System.String)">
            <summary>
            过滤html中的不安全代码
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.NoHTML(System.String)">
            <summary>
            去除HTML标记
            </summary>
            <param   name="Htmlstring">包括HTML的源码   </param>
            <returns>已经去除后的文字</returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.IsInnerIP(System.String)">
            <summary>
            判断IP地址是否为内网IP地址
            </summary>
            <param name="ipAddress">IP地址字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.IsInner(System.Int64,System.Int64,System.Int64)">
            <summary>
            判断用户IP地址转换为Long型后是否在内网IP地址所在范围
            </summary>
            <param name="userIp"></param>
            <param name="begin"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetIpNum(System.String)">
            <summary>
            把IP地址转换为Long型数字
            </summary>
            <param name="ipAddress">IP地址字符串</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetHtml(System.Web.UI.Control)">
            <summary>
            返回 Web服务器控件的HTML 输出
            </summary>
            <param name="ctl"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetUrl(System.Boolean)">
            <summary>
            获取当前访问的页面的完整URL，如http://sj.91.com/dir/a.aspx
            </summary>
            <param name="getQueryString"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.DownloadFile(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            文件下载
            </summary>
            <param name="downloadUrl"></param>
            <param name="savePath"></param>
            <param name="refererUrl"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="proxy"></param>
            <param name="userAgent"></param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect"></param>
            <param name="downsize">分块下载每次下载字节数，小于等于0时表示不分块下载</param>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.DownloadFile(System.String,System.String,System.Net.CookieContainer@,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            文件下载(注：如果savePath已经存在，会被先删除)
            </summary>
            <param name="downloadUrl"></param>
            <param name="savePath"></param>
            <param name="cookieContainer"></param>
            <param name="refererUrl"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="proxy"></param>
            <param name="userAgent"></param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect"></param>
            <param name="downsize">分块下载时，每次下载字节数，小于等于0时表示不分块下载</param>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.UploadFileClient(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            客户端调用的文件上传方法，需配合UploadFileServer使用(如Aspx页面用UploadFileServer方法接收)
            </summary>
            <param name="filePath">需要上传的本地文件路径</param>
            <param name="uploadUrl">服务端接收上传的url路径</param>
            <param name="savePath">服务端的保存路径（含文件名），为空时用filePath</param>
            <param name="uploadsize">分块上传每次上传字节数，小于等于0时表示不分块上传</param>
            <param name="refererUrl"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="proxy"></param>
            <param name="userAgent"></param>
            <param name="requestTimeOut"></param>
            <param name="needZip">上传过程中，是否要进行zip</param>
            <param name="unZipFileName">上传完成后，服务端是否要进行unzip(为null表示不需要解压,不为null表示压缩包内的唯一文件名)</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.UploadOnlyRefreshClient(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            客户端调用的方法，不上传文件，仅为了让服务端执行委托方法，需配合UploadFileServer使用(如Aspx页面用UploadFileServer方法接收)
            </summary>
            <param name="filePath">需要上传的本地文件路径</param>
            <param name="uploadUrl">服务端接收上传的url路径</param>
            <param name="savePath">服务端的保存路径（含文件名），为空时用filePath</param>
            <param name="refererUrl"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="proxy"></param>
            <param name="userAgent"></param>
            <param name="requestTimeOut"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.UploadFileServer(net91com.Core.Web.WebHelper.UploadSuccessHandle)">
            <summary>
            服务端调用的文件上传方法，需配合UploadFileClient使用(Aspx页面用UploadFileServer方法接收)
            </summary>
            <param name="method">上传完成时要调用的委托,会把保存文件路径作为参数传入</param>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.PostFile(System.String,System.String,System.Text.Encoding)">
            <summary>
            模拟post文件
            </summary>
            <param name="strFileToUpload"></param>
            <param name="strUrl"></param>
            <param name="returnContentEncode">返回内容编码</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetPage(System.String,System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            抓取页面
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="para">参数</param>
            <param name="httpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetPage(System.String,System.String,System.String,System.Text.Encoding,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            抓取页面
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="showHeader">返回内容是否包括头信息</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetPage(System.String,System.Boolean@,System.Int64@,System.Int32@,System.String,System.String,System.Text.Encoding,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            抓取页面
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="isok">返回抓取结果，成功还是失败</param>
            <param name="processtime">返回抓取页面耗费的时间，毫秒</param>
            <param name="responseStatus">响应状态码，如200、302、503；600表示web异常；700表示其它异常</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="showHeader">返回内容是否包括头信息</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetPage(System.String,System.Boolean@,System.Net.CookieContainer@,System.Int64@,System.Int32@,System.String,System.String,System.Text.Encoding,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            抓取页面
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="isok">返回抓取结果，成功还是失败</param>
            <param name="cookieContainer">要使用的cookie</param>
            <param name="processtime">返回抓取页面耗费的时间，毫秒</param>
            <param name="responseStatus">响应状态码，如200、302、503；600表示web异常；700表示其它异常</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="showHeader">返回内容是否包括头信息</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.BeginGetPage(System.String,System.Net.CookieContainer@,System.String,System.String,System.Text.Encoding,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.AsyncCallback)">
            <summary>
            异步抓取页面（BeginGetResponse是通过IOCP[I/O Completion Port]支持的异步，不占用线程池线程）
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="cookieContainer">要使用的cookie</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <param name="callback">BeginGetResponse用到的回调函数</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.BeginGetPage(System.String,System.String,System.String,System.Text.Encoding,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.AsyncCallback)">
            <summary>
            异步抓取页面（BeginGetResponse是通过IOCP[I/O Completion Port]支持的异步，不占用线程池线程）
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <param name="callback">BeginGetResponse用到的回调函数</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.EndGetPage(System.IAsyncResult,System.Int32@,System.Text.Encoding,System.Boolean)">
            <summary>
            抓取页面的异步结束方法
            </summary>
            <param name="result"></param>
            <param name="responseStatus">响应状态码，如200、302、503；600表示web异常；700表示其它异常</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="showHeader">返回内容是否包括头信息</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.EndGetPage(System.IAsyncResult,System.Text.Encoding,System.Boolean)">
            <summary>
            抓取页面的异步结束方法
            </summary>
            <param name="result"></param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="showHeader">返回内容是否包括头信息</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetPageBinary(System.String,System.Boolean@,System.Net.CookieContainer@,System.Int64@,System.Int32@,System.String,System.String,System.Text.Encoding,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            抓取页面
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="isok">返回抓取结果，成功还是失败</param>
            <param name="cookieContainer">要使用的cookie</param>
            <param name="processtime">返回抓取页面耗费的时间，毫秒</param>
            <param name="responseStatus">响应状态码，如200、302、503；600表示web异常；700表示其它异常</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.GetPageBinary(System.String,System.Boolean@,System.Int64@,System.Int32@,System.String,System.String,System.Text.Encoding,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            抓取页面
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="isok">返回抓取结果，成功还是失败</param>
            <param name="processtime">返回抓取页面耗费的时间，毫秒</param>
            <param name="responseStatus">响应状态码，如200、302、503；600表示web异常；700表示其它异常</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.BeginGetPageBinary(System.String,System.Net.CookieContainer@,System.String,System.String,System.Text.Encoding,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.AsyncCallback)">
            <summary>
            异步抓取页面（BeginGetResponse是通过IOCP[I/O Completion Port]支持的异步，不占用线程池线程）
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="cookieContainer">要使用的cookie</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <param name="callback">BeginGetResponse用到的回调函数</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.BeginGetPageBinary(System.String,System.String,System.String,System.Text.Encoding,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},System.AsyncCallback)">
            <summary>
            异步抓取页面（BeginGetResponse是通过IOCP[I/O Completion Port]支持的异步，不占用线程池线程）
            </summary>
            <param name="url">要抓取的网址</param>
            <param name="param">参数</param>
            <param name="HttpMethod">GET POST</param>
            <param name="encoding">编码格式，默认UTF-8</param>
            <param name="refererUrl">要设置的头信息的引用页</param>
            <param name="userName">网页登录名</param>
            <param name="password">登录密码</param>
            <param name="proxy">WebRequest要用到的代理</param>
            <param name="userAgent">要设置的头信息里的用户代理</param>
            <param name="requestTimeOut">WebRequest的最大请求时间，单位：毫秒，0为不设置</param>
            <param name="allowRedirect">出现301或302之类的转向时，是否要转向</param>
            <param name="headers">要设置的Header键值对</param>
            <param name="callback">BeginGetResponse用到的回调函数</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.EndGetPageBinary(System.IAsyncResult)">
            <summary>
            抓取页面的异步结束方法
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.CheckValidationResult(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            用于访问Https站点时，证书有问题，始终返回true
            </summary>
            <param name="sender"></param>
            <param name="certificate"></param>
            <param name="chain"></param>
            <param name="errors"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.MoveFile(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            把源文件，移动到目标文件，会尝试移动两次
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="targetFile">目标文件</param>
            <param name="keepOld">源文件是否保留</param>
            <param name="secondMoveWait">毫秒数,第一次移动失败，进行第二次移动前要等待的时间</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Web.WebHelper.UnZipAndMoveFile(System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            解压并移动文件
            </summary>
            <param name="zipFile">压缩文件路径</param>
            <param name="sourceFile">压缩文件里的文件名</param>
            <param name="targetFile">目标文件路径</param>
            <param name="keepOld">源文件是否保留</param>
            <param name="secondMoveWait">毫秒数,第一次移动失败，进行第二次移动前要等待的时间</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Web.WebHelper.UploadSuccessHandle">
            <summary>
            上传完成时的委托
            </summary>
            <param name="UploadFilePath">上传文件保存路径</param>
        </member>
        <member name="T:net91com.Core.RegCenterService.accountregws">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.#ctor">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91RegisterAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91RegisterAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4MB(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4MBAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4MBAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4MBV2(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4MBV2Async(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4MBV2Async(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4Count(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4CountAsync(System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4CountAsync(System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91RegisterCommon(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91RegisterCommonAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91RegisterCommonAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Check(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91CheckAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91CheckAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Nickname91Check(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Nickname91CheckAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Nickname91CheckAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4Spe(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4SpeAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4SpeAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register_ZF(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register_ZFAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register_ZFAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Check_ZF(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Check_ZFAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Check_ZFAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.GetRegTimeByUserName_ZF(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.GetRegTimeByUserName_ZFAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.GetRegTimeByUserName_ZFAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4AutoMobileReg(System.String,System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4AutoMobileRegAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.Account91Register4AutoMobileRegAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.SDNT_automobile(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.SDNT_automobileAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.SDNT_automobileAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.RegCenterService.accountregws.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91RegisterCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Register4MBCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Register4MBV2Completed">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Register4CountCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91RegisterCommonCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91CheckCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Nickname91CheckCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Register4SpeCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Register_ZFCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Check_ZFCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.GetRegTimeByUserName_ZFCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.Account91Register4AutoMobileRegCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.RegCenterService.accountregws.SDNT_automobileCompleted">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91RegisterCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91RegisterCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91RegisterCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4MBCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4MBCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4MBCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4MBV2CompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4MBV2CompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4MBV2CompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4MBV2CompletedEventArgs.strUin">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4MBV2CompletedEventArgs.ordernumber_master">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4MBV2CompletedEventArgs.ordernumber_slave">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4CountCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4CountCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4CountCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91RegisterCommonCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91RegisterCommonCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91RegisterCommonCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91RegisterCommonCompletedEventArgs.strUin">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91CheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91CheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91CheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Nickname91CheckCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Nickname91CheckCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Nickname91CheckCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4SpeCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4SpeCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4SpeCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register_ZFCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register_ZFCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register_ZFCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Check_ZFCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Check_ZFCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Check_ZFCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.GetRegTimeByUserName_ZFCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.GetRegTimeByUserName_ZFCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.GetRegTimeByUserName_ZFCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.GetRegTimeByUserName_ZFCompletedEventArgs.regtime">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4AutoMobileRegCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.Account91Register4AutoMobileRegCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4AutoMobileRegCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.Account91Register4AutoMobileRegCompletedEventArgs.uin">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.SDNT_automobileCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.RegCenterService.SDNT_automobileCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.SDNT_automobileCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.RegCenterService.SDNT_automobileCompletedEventArgs.SDEN">
            <remarks/>
        </member>
        <member name="T:net91com.Core.Util.SerializeHelper">
            <summary>
            序列化辅助类
            </summary>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.BinarySerialize``1(``0,System.String)">
            <summary>
            序列化对象为二进制文件
            </summary>
            <typeparam name="T">需要序列化的对象类型，必须声明[Serializable]特征，且必须是public类</typeparam>
            <param name="obj">需要序列化的对象</param>
            <param name="serializeFilePath">序列化后的物理文件路径</param>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.BinaryDeserialize``1(System.String)">
            <summary>
            反序列化二进制文件为对象
            </summary>
            <typeparam name="T">需要反序列化的对象类型，必须声明[Serializable]特征</typeparam>
            <param name="serializeFilePath">反序列化对象的物理文件路径</param>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlSerialize``1(``0,System.String)">
            <summary>
            序列化对象为XML文件
            </summary>
            <typeparam name="T">
            需要序列化的对象类型，必须声明[Serializable]特征，且属性类也必须声明[Serializable]特征。
            如果属性是抽象类或接口，必须声明[System.Xml.Serialization.XmlInclude(typeof(子类))]特征
            </typeparam>
            <param name="obj">需要序列化的对象</param>
            <param name="serializeFilePath">序列化后的物理文件路径</param>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlDeserialize``1(System.String)">
            <summary>
            反序列化XML文件为对象
            </summary>
            <typeparam name="T">
            需要序列化的对象类型，必须声明[Serializable]特征，且属性类也必须声明[Serializable]特征。
            如果属性是抽象类或接口，必须声明[System.Xml.Serialization.XmlInclude(typeof(子类))]特征
            </typeparam>
            <param name="serializeFilePath">反序列化对象的物理文件路径</param>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlSerializeToStr``1(``0)">
            <summary>
            把对象序列化为Xml字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlDeserializeFromStr``1(System.String)">
            <summary>
            把Xml字符串反序列化成对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlSerializeNew``1(``0,System.String)">
            <summary>
            序列化对象为XML文件
            </summary>
            <typeparam name="T">
            需要序列化的对象类型，必须声明[Serializable]特征，且属性类也必须声明[Serializable]特征。
            如果属性是抽象类或接口，必须声明[System.Xml.Serialization.XmlInclude(typeof(子类))]特征
            </typeparam>
            <param name="obj">需要序列化的对象</param>
            <param name="serializeFilePath">序列化后的物理文件路径</param>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlDeserializeNew``1(System.String)">
            <summary>
            反序列化XML文件为对象
            </summary>
            <typeparam name="T">
            需要序列化的对象类型，必须声明[Serializable]特征，且属性类也必须声明[Serializable]特征。
            如果属性是抽象类或接口，必须声明[System.Xml.Serialization.XmlInclude(typeof(子类))]特征
            </typeparam>
            <param name="serializeFilePath">反序列化对象的物理文件路径</param>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlSerializeToStrNew``1(``0)">
            <summary>
            把对象序列化为Xml字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.SerializeHelper.XmlDeserializeFromStrNew``1(System.String)">
            <summary>
            把Xml字符串反序列化成对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.KeyValueHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Util.KeyValueHelper.GetValue(System.String,System.String)">
            <summary>
            组合字符串格式（例：1|共享,2|免费,3|试用）
            </summary>
            <param name="valueKeys"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.KeyValueHelper.GetKey(System.String,System.String)">
            <summary>
            组合字符串格式（例：1|共享,2|免费,3|试用）
            </summary>
            <param name="valueKeys"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.ToUserException">
            <summary>
            此异常信息只输出给用户,不记录日志
            </summary>
        </member>
        <member name="M:net91com.Core.ToUserException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:net91com.Core.Data.SqlParamHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Data.SqlParamHelper.MakeParam(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
            <param name="Direction"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.SqlParamHelper.MakeOutParam(System.String,System.Data.SqlDbType,System.Int32)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.SqlParamHelper.MakeInParam(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Size"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.SqlParamHelper.MakeInParam(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="DbType"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.SqlParamHelper.MakeInParam(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="ParamName"></param>
            <param name="Value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.SqlParamHelper.GetColumnSize(System.Data.SqlDbType)">
            <summary>
            返回相应的数据类型长度
            </summary>
            <param name="dataType"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.CustomExceptions.IOSIdentifierDisaccordException">
            <summary>
            IOS软件包标示符不一致
            <remarks>pxlpkg.plist和info.plist这两个文件中的标示符</remarks>
            </summary>
        </member>
        <member name="M:net91com.Core.CustomExceptions.IOSIdentifierDisaccordException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.CustomExceptions.IOSIdentifierDisaccordException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:net91com.Core.CustomExceptions.IOSIdentifierDisaccordException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="T:net91com.Core.Extensions.OtherExtensions">
            <summary>
            其它扩展方法
            </summary>
        </member>
        <member name="M:net91com.Core.Extensions.OtherExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Predicate{``0})">
            <summary>
            根据指定委托从数组中查找位置,未找到返回-1
            </summary>
            <typeparam name="T">数组元素类型</typeparam>
            <param name="array">数组对象</param>
            <param name="method">定义一组条件并确定指定对象是否符合这些条件的方法</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.OtherExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Predicate{``0},System.Int32)">
            <summary>
            根据指定委托从数组中查找位置,未找到返回-1
            </summary>
            <typeparam name="T">数组元素类型</typeparam>
            <param name="array">数组对象</param>
            <param name="method">定义一组条件并确定指定对象是否符合这些条件的方法</param>
            <param name="startIndex">从零开始的搜索的起始索引</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Extensions.OtherExtensions.IndexOf``1(System.Collections.Generic.IList{``0},System.Predicate{``0},System.Int32,System.Int32)">
            <summary>
            根据指定委托从数组中查找位置,未找到返回-1
            </summary>
            <typeparam name="T">数组元素类型</typeparam>
            <param name="array">数组对象</param>
            <param name="method">定义一组条件并确定指定对象是否符合这些条件的方法</param>
            <param name="startIndex">从零开始的搜索的起始索引</param>
            <param name="count">要搜索的部分中的元素数</param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.Passport2Helper">
            <summary>
            91站点帐号登录注册接口访问辅助类
            <remarks>
            该类依赖于"统一登录" WebService，使用该类必须在Web.config中配置以下节点
            <![CDATA[
            <add key="Passport_API_UserName" value="Api用户名"/>
            <add key="Passport_API_Password" value="Api密码"/>
            <add key="Passport_API_CheckLogin_KeyValue" value="登录方法的Key值"/>
            <add key="Site_Flag" value="站点标识"/>
            ]]>
            </remarks>
            </summary>
        </member>
        <member name="F:net91com.Core.Util.Passport2Helper.DefaultImei">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.CheckLoginFromQueryString">
            <summary>
            根据统一接口登录后的转向Url参数进行身份验证
            </summary>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.CheckLoginFromCookies">
            <summary>
            根据统一接口登录后的Cookies进行身份验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.IsChecking">
            <summary>
            是否是验证登录
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.CheckUserLogin(System.String,System.String,System.String@)">
            <summary>
            根据用户名和密码验证
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="return_userinfo">回用户信息组合  == userid[账号ID]nickname[可逆加密后的昵称信息]sex[性别]</param>
            <returns>( -9:系统异常请联系管理员 -3:传入参数不完整 15:校验码错误,
            16:非法访问IP 10000:登录成功同时用户资料加载成功 10001:登陆成功但是用户扩展资料加载失败 
            20000:账号不存在 20001:密码错误 20003:账号登陆限制 20006:账号已经登陆封号)</returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.CheckLogin(System.Int64,System.String,System.String,System.String,System.String)">
            <summary>
            验证帐号是否登录成功
            </summary>
            <param name="c_userid">账户ID</param>
            <param name="c_ordernumber_master">主登录标识</param>
            <param name="c_ordernumber_slave">从登录标识</param>
            <param name="c_siteflag">来源站点标识</param>
            <param name="c_checkcode">Cookie信息校验码</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.Logout">
            <summary>
            登录注销
            </summary>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.Loginout(System.String)">
            <summary>
            登录注销
            </summary>
            <param name="imei"></param>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.RegisterAccount(System.String,System.String,System.String,System.Int32@,System.Int64@)">
            <summary>
            注册帐号
            </summary>
            <param name="account">注册账号</param>
            <param name="password">注册密码</param>
            <param name="idCard">身份证号码</param>
            <param name="returnCode">返回错误代码</param>
            <param name="returnUID">返回注册账号ID</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.GetCheckCode(System.String)">
            <summary>
            获取验证码
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.GetUserIDByName(System.String)">
            <summary>
            根据用户名取用户ID
            </summary>
            <param name="userName">用户名</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.ExistAccount(System.String)">
            <summary>
            检测账号是否存在
            </summary>
            <param name="account">账号名称</param>
            <returns>存在返回true，否则返回false</returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.CreateUserToken">
            <summary>
            构造SOAP头部签名
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.SaveLogin2Cookies(System.String,System.Int64,System.String)">
            <summary>
             保存登陆凭证到cookies（时间20分钟）
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <param name="UID">用户ID</param>
            <param name="username">用户名</param>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.SaveLogin2Cookies(System.String,System.Int64,System.String,System.String)">
            <summary>
             保存登陆凭证到cookies（时间20分钟）
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <param name="UID">用户ID</param>
            <param name="username">用户名</param>
            <param name="nickname"></param>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.SimpleCheckLogin(System.String)">
            <summary>
            简单判断当前是否登录（用于各平台在Session中获取登陆信息之前使用）
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.CheckLoginFromCookies(System.String,System.Int64@,System.String@)">
            <summary>
            判断当前的登录凭证是否有效(验证签名和有效时间)
            </summary>
            <param name="iemi">手机唯一标识码</param>
            <param name="UID">用户91通行证ID</param>
            <param name="username">用户91通行证登陆名</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.UpdateLogin2Cookies(System.String)">
            <summary>
            更新登陆凭证的cookies信息（时间20分钟）
            </summary>
            <param name="iemi">手机唯一标识码</param>
        </member>
        <member name="M:net91com.Core.Util.Passport2Helper.SetCookieDomain(System.Web.HttpContext,System.Web.HttpCookie)">
            <summary>
            设置cookie域
            </summary>
            <param name="ctx"></param>
            <param name="cookie"></param>
        </member>
        <member name="T:net91com.Core.Data.MySqlDbTypeParser">
            <summary>
            Mysql数据库常用的字段类型转换
            </summary>
        </member>
        <member name="M:net91com.Core.Data.MySqlDbTypeParser.ConvertUnixDateTime(System.String)">
            <summary>
            将Mysql中的表示时间的Unsigned类型转成对应的DataTime
            </summary>
            <param name="unixDateTime">Mysql中表示时间的Unsigned类型字段值</param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Data.MySqlDbTypeParser.ConvertDateTimeUnix(System.DateTime)">
            <summary>
            将DataTime转成对应的Mysql中的表示时间的Unsigned类型
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.CacheExpirationOption">
            <summary>
            过期方式
            </summary>
        </member>
        <member name="F:net91com.Core.CacheExpirationOption.AbsoluteExpiration">
            <summary>
            绝对过期
            </summary>
        </member>
        <member name="F:net91com.Core.CacheExpirationOption.SlidingExpiration">
            <summary>
            弹性过期
            </summary>
        </member>
        <member name="T:net91com.Core.CacheTimeOption">
            <summary>
            常用过期时间
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.None">
            <summary>
            不缓存
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.Short">
            <summary>
            短时间 3分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.Normal">
            <summary>
            一般正常过期时间 10分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.Long">
            <summary>
            长时间 30分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.NotRemovable">
            <summary>
            永不过期
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.OneMinute">
            <summary>
            一分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.SixMinutes">
            <summary>
            六分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.TenMinutes">
            <summary>
            10分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.QuarterHour">
            <summary>
            十五分钟
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.HalfHour">
            <summary>
            半小时
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.OneHour">
            <summary>
            一小时
            </summary>
        </member>
        <member name="F:net91com.Core.CacheTimeOption.HalfDay">
            <summary>
            半天(12小时)
            </summary>
        </member>
        <member name="T:net91com.Core.MobileOption">
            <summary>
            手机类型
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.None">
            <summary>
            不属于任何平台
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.iPhone">
            <summary>
            iPhone
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.WM">
            <summary>
            Window Mobile
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.S60">
            <summary>
            SYMBIAN 
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.Oms">
            <summary>
            移动Oms
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.M8">
            <summary>
            M8
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.IPAD">
            <summary>
            IPAD【助手IPAD平台区分是采用固件信息区分的，还是子属Iphone平台】
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.WP7">
            <summary>
            WP7
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.AndroidPad">
            <summary>
            AndriodPad
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.AndroidTV">
            <summary>
            AndroidTV
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.WebGame">
            <summary>
            网页游戏
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.Win8">
            <summary>
            Windows8
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.All">
            <summary>
            所有平台
            </summary>
        </member>
        <member name="F:net91com.Core.MobileOption.PC">
            <summary>
            PC
            </summary>
        </member>
        <member name="T:net91com.Core.ResourceTypeOption">
            <summary>
            资源类型常量
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.None">
            <summary>
            非现有资源(0)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Soft">
            <summary>
            软件资源（1）
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Theme">
            <summary>
            主题资源（2）
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Ring">
            <summary>
            铃声资源（3）
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Picture">
            <summary>
            壁纸资源（4）
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.NovelBook">
            <summary>
            小说（5）
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.EZine">
            <summary>
            电子杂志（6）
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Sms">
            <summary>
            短信(7)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.EBook">
            <summary>
            电子书(8)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.MobileGame">
            <summary>
            手机游戏(9)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Hardware">
            <summary>
            硬件站资源(10)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Cartoon">
            <summary>
            漫画(11)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.RSS">
            <summary>
            新闻(12)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Music">
            <summary>
            音乐
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Video">
            <summary>
            视频
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.College91">
            <summary>
            91商学院资源
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.KT91">
            <summary>
            特纳专区
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.ThirdPartyMarket">
            <summary>
            91Plus第三方资源站点
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.ItuneApp">
            <summary>
            itunes限免软件软件[仅作为统计用]
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.ItuneFreeApp">
            <summary>
            通过助手直接下载iTunes的免费软件[仅作为统计用]
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.SoftTag">
            <summary>
            软件合辑
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.WinPhone">
            <summary>
            WinPhone
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.CopyrightedSoft">
            <summary>
            正版体验
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.WebpageGame">
            <summary>
            91页游中心(用于网页游戏的评论)
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Ad">
            <summary>
            广告资源
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.ThemeFont">
            <summary>
            主题字体
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.Message">
            <summary>
            消息
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.BaiduMusic">
            <summary>
            百度音乐
            </summary>
        </member>
        <member name="F:net91com.Core.ResourceTypeOption.General">
            <summary>
            通用资源
            </summary>
        </member>
        <member name="T:net91com.Core.ZineDownloadOptions">
            <summary>
            杂志下载入口类型
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.PCSuite">
            <summary>
            手机助手
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.Browser">
            <summary>
            PC浏览器
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.iPhone">
            <summary>
            iPhone
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.PandaInterface">
            <summary>
            熊猫空间接口
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.WM">
            <summary>
            wm
            </summary>
        </member>
        <member name="F:net91com.Core.ZineDownloadOptions.S60">
            <summary>
            S60
            </summary>
        </member>
        <member name="T:net91com.Core.NetModeOption">
            <summary>
            设备连接类型
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Unknow">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Wifi">
            <summary>
            Wifi 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.USB">
            <summary>
            USB 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.MobileUnknow">
            <summary>
            手机联网
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile2G">
            <summary>
            Mobile2G 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile3G">
            <summary>
            Mobile3G 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.MobileUnknow_10010">
            <summary>
            中国联通手机联网
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile2G_10010">
            <summary>
            中国联通Mobile2G 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile3G_10010">
            <summary>
            中国联通Mobile3G 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.MobileUnknow_10000">
            <summary>
            中国电信手机联网
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile2G_10000">
            <summary>
            中国电信Mobile2G 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile3G_10000">
            <summary>
            中国电信Mobile3G
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.MobileUnknow_10086">
            <summary>
            中国移动手机联网
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile2G_10086">
            <summary>
            中国移动Mobile2G 
            </summary>
        </member>
        <member name="F:net91com.Core.NetModeOption.Mobile3G_10086">
            <summary>
            中国移动Mobile3G
            </summary>
        </member>
        <member name="T:net91com.Core.PadOption">
            <summary>
            支持的手机或平板类型
            不需要使用此条件时，请统一使用Phone枚举
            </summary>
        </member>
        <member name="F:net91com.Core.PadOption.Phone">
            <summary>
            仅支持手机
            不需要使用此条件时，请统一使用Phone枚举
            </summary>
        </member>
        <member name="F:net91com.Core.PadOption.Pad">
            <summary>
            仅支持平板
            </summary>
        </member>
        <member name="T:net91com.Core.AccountLoginService.UserCheckLogin">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.#ctor">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master(System.String,System.String,System.Int32,System.Int32,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_MasterAsync(System.String,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_MasterAsync(System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_SingleSign(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_Single_SignOut(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec(System.String,System.String,System.Int32,System.Int32,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TecAsync(System.String,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TecAsync(System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_SingleSign(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_Single_SignOut(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA(System.String,System.String,System.Int32,System.Int32,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EAAsync(System.String,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EAAsync(System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_SingleSign(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_Single_SignOut(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM(System.String,System.String,System.Int32,System.Int32,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TMAsync(System.String,System.String,System.Int32,System.Int32,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TMAsync(System.String,System.String,System.Int32,System.Int32,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_SingleSign(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_SingleSignAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_Single_SignOut(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_Single_SignOutAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Coper(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperForReturn(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperForReturnAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperForReturnAsync(System.String,System.String,System.Int32,System.Int32,System.Int64,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:net91com.Core.AccountLoginService.UserCheckLogin.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_MasterCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_SingleSignCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Master_Single_SignOutCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TecCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_SingleSignCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_Tec_Single_SignOutCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EACompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_SingleSignCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_EA_Single_SignOutCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TMCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_SingleSignCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_TM_Single_SignOutCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperCompleted">
            <remarks/>
        </member>
        <member name="E:net91com.Core.AccountLoginService.UserCheckLogin.CheckUserLogin_CoperForReturnCompleted">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.UserNameToken">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.UserNameToken.UserName">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.UserNameToken.Password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.UserNameToken.CheckCode">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_MasterCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_SingleSignCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Master_Single_SignOutCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Master_Single_SignOutCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Master_Single_SignOutCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TecCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_SingleSignCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Tec_Single_SignOutCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_Tec_Single_SignOutCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_Tec_Single_SignOutCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EACompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_SingleSignCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_EA_Single_SignOutCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_EA_Single_SignOutCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_EA_Single_SignOutCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TMCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.username">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.userid">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.nickname">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.password">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.logintime">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_SingleSignCompletedEventArgs.loginip">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TM_Single_SignOutCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_TM_Single_SignOutCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_TM_Single_SignOutCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_CoperCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_CoperCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_CoperCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_CoperForReturnCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:net91com.Core.AccountLoginService.CheckUserLogin_CoperForReturnCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_CoperForReturnCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:net91com.Core.AccountLoginService.CheckUserLogin_CoperForReturnCompletedEventArgs.email">
            <remarks/>
        </member>
        <member name="T:net91com.Core.Mobile.MobileUserInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:net91com.Core.Mobile.MobileUserInfo.UnKnowIMEI">
            <summary>
            未知的手机标识号
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.ID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.NickName">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.Title">
            <summary>
            用户显示名称
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.AddTime">
            <summary>
            加入社区时间
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.Account">
            <summary>
            用户帐号
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.TrueName">
            <summary>
            用户真实姓名
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.Email">
            <summary>
            电子邮箱
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.IsLogin">
            <summary>
            判断是否已登录
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.MobileNumber">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:net91com.Core.Mobile.MobileUserInfo.Imei">
            <summary>
            手机的IMEI号
            </summary>
        </member>
        <member name="T:net91com.Core.Util.LoginResult">
            <summary>
            统一登录成功后返回的帐号信息实体
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.LoginSuccess">
            <summary>
            获取或设置是否登录成功
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.ErrorMessage">
            <summary>
            获取或设置登录失败时的消息
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.MessageCode">
            <summary>
            获取或设置登录结果状态码
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.UserName">
            <summary>
            获取或设置用户名
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.UserId">
            <summary>
            获取或设置用户Id
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.NickName">
            <summary>
            获取或设置用户昵称
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.Password">
            <summary>
            获取或设置用户密码
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.LoginTime">
            <summary>
            获取或设置登录时间
            </summary>
        </member>
        <member name="P:net91com.Core.Util.LoginResult.LoginIp">
            <summary>
            获取或设置登录Ip
            </summary>
        </member>
        <member name="T:net91com.Core.Util.JsonHelper">
            <summary>
            Json辅助类
            </summary>
        </member>
        <member name="M:net91com.Core.Util.JsonHelper.ToEnumerable(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.JsonHelper.ToDictionary(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.JsonHelper.GetJSONString(System.Data.DataTable)">
            <summary>
            转换table数据成json格式
            </summary>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.JsonHelper.StringToJson``1(``0)">
            <summary>
            对象生成Json串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.JsonHelper.JsonToObject``1(System.String)">
            <summary>
            Json串生成对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Util.DateTimeHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.FromUnixTime(System.Int64)">
            <summary>   
            将unix timestamp时间戳(毫秒数) 转换为.NET的DateTime   
            </summary>   
            <param name="timeStamp">毫秒数</param>   
            <returns>转换后的时间</returns>   
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.FromUnixTime(System.Int32)">
            <summary>   
            将unix timestamp时间戳(秒数) 转换为.NET的DateTime   
            </summary>   
            <param name="timeStamp">秒数</param>   
            <returns>转换后的时间</returns>   
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.FromDateTime(System.DateTime)">
            <summary>   
            将.NET的DateTime转换为unix timestamp时间戳
            </summary>   
            <param name="dateTime">待转换的时间</param>   
            <returns>转换后的unix time</returns>   
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.FromDateTime(System.DateTime,System.Boolean)">
            <summary>   
            将.NET的DateTime转换为unix timestamp时间戳
            </summary>   
            <param name="dateTime">待转换的时间</param>   
            <param name="isReturnMillisecond">返回值是毫秒还是秒</param>   
            <returns>转换后的unix time</returns>   
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.FormatTime(System.String)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.FormatTime(System.DateTime)">
            <summary>
            
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.GetNowTime">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.DateDiffMinutes(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            判断dtBegin到dtEnd这个时间段 和 dtCompareBegin到dtCompareEnd时间段的交集分钟数
            </summary>
            <param name="dtBegin"></param>
            <param name="dtEnd"></param>
            <param name="dtCompareBegin"></param>
            <param name="dtCompareEnd"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.GetFirstDayOfMonth(System.Int32,System.Int32)">
            <summary>
            月份第一天
            </summary>
            <param name="Year"></param>
            <param name="Month"></param>
            <returns></returns>
        </member>
        <member name="M:net91com.Core.Util.DateTimeHelper.GetLastDayOfMonth(System.Int32,System.Int32)">
            <summary>
            月份最后一天
            </summary>
            <param name="Year"></param>
            <param name="Month"></param>
            <returns></returns>
        </member>
        <member name="T:net91com.Core.Enums.APKCpuOption">
            <summary>
            APK软件包支持的cpu类型枚举
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKCpuOption.unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKCpuOption.general">
            <summary>
            通用
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKCpuOption.armeabi">
            <summary>
            armeabi
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKCpuOption.armeabi_v7a">
            <summary>
            armeabi-v7a
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKCpuOption.mips">
            <summary>
            mips
            </summary>
        </member>
        <member name="F:net91com.Core.Enums.APKCpuOption.x86">
            <summary>
            x86
            </summary>
        </member>
    </members>
</doc>
